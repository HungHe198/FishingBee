// <auto-generated />
using System;
using Data_FishingBee.ContextFile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_FishingBee.Migrations
{
    [DbContext(typeof(FishingBeeDbContext))]
    [Migration("20250524135008_lan1")]
    partial class lan1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91909257-d2c9-49c5-b776-90c5a975f1be"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Default Admin",
                            FullName = "Super Admin",
                            Permissions = "All",
                            Status = "1",
                            UserId = new Guid("46e93eb3-9c28-4d87-a0f2-c934f73baa3a"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CartItemViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItemViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b0d1f15-67b9-47f5-9ced-d45730f48bd4"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7907),
                            Name = "Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("8ad4464c-ace7-48c5-baf5-4fe15c243d5a"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7909),
                            Name = "Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("d1f642d0-f86f-4c51-907d-b704af45efb9"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7910),
                            Name = "Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("4a9135ed-5996-4039-b193-48224a46f578"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7911),
                            Name = "Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("c96caa06-b37c-4bce-b1ab-9617d4cc8b25"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7912),
                            Name = "Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("7c0ab97b-8fca-4def-9641-c1eb7b954401"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7914),
                            Name = "Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("fdafc182-8aec-4b11-b364-73409f2e725e"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7915),
                            Name = "Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("6db8ef9e-bf35-4109-92b7-d954dc09b676"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7916),
                            Name = "Gác cần",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxOfDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOfTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutoLogout")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivityLogs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingForSupport")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed60e32b-b85c-4bea-87a5-70fcf27cbadd"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7761),
                            Description = "Nhà sản xuất cần câu nổi tiếng từ Nhật Bản",
                            Name = "Daiwa",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("192e276f-c218-4aca-a2b3-b028bcdd9565"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7771),
                            Description = "Thương hiệu đồ câu cá hàng đầu thế giới",
                            Name = "Shimano",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("3c482e5f-280b-43bf-a892-1ee951e0a54c"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7772),
                            Description = "Chuyên sản xuất mồi câu cá",
                            Name = "Rapala",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("9adbb974-f118-48c8-911f-a682aa1da0ab"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7773),
                            Description = "Nhà sản xuất mồi và phụ kiện câu cá",
                            Name = "Berkley",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("631768d1-cd37-447f-bce0-fbbc03f5d543"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7774),
                            Description = "Thương hiệu trục câu nổi tiếng",
                            Name = "Abu Garcia",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("8a82f859-48af-4280-a438-33aae6d35db8"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7775),
                            Description = "Nhà sản xuất đồ câu chất lượng cao",
                            Name = "Okuma",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("e24b6a19-e02a-47ca-a1d4-2be2b823e8b2"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7865),
                            Description = "Chuyên về trục và cần câu biển",
                            Name = "Penn",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("4844c4d0-bfe0-48db-814d-0a3a3709e496"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7868),
                            Description = "Nhà sản xuất dây câu chất lượng",
                            Name = "Sufix",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("54d77a39-7027-43f3-b6dd-4d6d4a611aa3"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7869),
                            Description = "Chuyên sản xuất lưỡi câu",
                            Name = "Gamakatsu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("95b8ef4d-75e4-4003-9849-e67363d24cc9"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7870),
                            Description = "Thương hiệu lưỡi câu nổi tiếng",
                            Name = "Mustad",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31438e07-2be9-48c9-981d-68c41b19e9d2"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("8b0d1f15-67b9-47f5-9ced-d45730f48bd4"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7957),
                            ManufacturerId = new Guid("ed60e32b-b85c-4bea-87a5-70fcf27cbadd"),
                            Name = "Sản phẩm 1 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("c6ef944b-fcd4-4bbd-a165-0ce012c09f25"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("8ad4464c-ace7-48c5-baf5-4fe15c243d5a"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7988),
                            ManufacturerId = new Guid("192e276f-c218-4aca-a2b3-b028bcdd9565"),
                            Name = "Sản phẩm 2 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("22076318-3e87-471c-bf2a-bf8db27ae496"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("d1f642d0-f86f-4c51-907d-b704af45efb9"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8001),
                            ManufacturerId = new Guid("3c482e5f-280b-43bf-a892-1ee951e0a54c"),
                            Name = "Sản phẩm 3 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("cc7e3878-a10c-40da-a621-53d2034ad629"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("4a9135ed-5996-4039-b193-48224a46f578"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8015),
                            ManufacturerId = new Guid("9adbb974-f118-48c8-911f-a682aa1da0ab"),
                            Name = "Sản phẩm 4 - Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("33a7bbe5-cbea-46ba-9984-99e9cdbceb5c"),
                            AttributeName = "Dung tích",
                            AttributeUnit = "lít",
                            CategoryId = new Guid("c96caa06-b37c-4bce-b1ab-9617d4cc8b25"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8055),
                            ManufacturerId = new Guid("631768d1-cd37-447f-bce0-fbbc03f5d543"),
                            Name = "Sản phẩm 5 - Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("4cac83f3-1cac-4886-88cb-c5007695eb5c"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("7c0ab97b-8fca-4def-9641-c1eb7b954401"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8070),
                            ManufacturerId = new Guid("8a82f859-48af-4280-a438-33aae6d35db8"),
                            Name = "Sản phẩm 6 - Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("2df3ac10-4309-400e-a6ca-6a92b681268a"),
                            AttributeName = "Loại mồi",
                            AttributeUnit = "",
                            CategoryId = new Guid("fdafc182-8aec-4b11-b364-73409f2e725e"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8083),
                            ManufacturerId = new Guid("e24b6a19-e02a-47ca-a1d4-2be2b823e8b2"),
                            Name = "Sản phẩm 7 - Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("da29e6be-6af1-4b7d-b6e8-eb7aa3b22711"),
                            AttributeName = "Chất liệu",
                            AttributeUnit = "",
                            CategoryId = new Guid("6db8ef9e-bf35-4109-92b7-d954dc09b676"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8230),
                            ManufacturerId = new Guid("4844c4d0-bfe0-48db-814d-0a3a3709e496"),
                            Name = "Sản phẩm 8 - Gác cần",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("bbcce8d1-9cf3-4de2-8a37-8d69bc308034"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("8b0d1f15-67b9-47f5-9ced-d45730f48bd4"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8241),
                            ManufacturerId = new Guid("54d77a39-7027-43f3-b6dd-4d6d4a611aa3"),
                            Name = "Sản phẩm 9 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("e9d972a0-97a1-4123-ba04-42ca718a114a"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("8ad4464c-ace7-48c5-baf5-4fe15c243d5a"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8254),
                            ManufacturerId = new Guid("95b8ef4d-75e4-4003-9849-e67363d24cc9"),
                            Name = "Sản phẩm 10 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("d0256592-aaec-4c9f-a378-93a970f8b4ce"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("d1f642d0-f86f-4c51-907d-b704af45efb9"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8264),
                            ManufacturerId = new Guid("ed60e32b-b85c-4bea-87a5-70fcf27cbadd"),
                            Name = "Sản phẩm 11 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("69beb8a2-795c-4aee-842e-06ca9507dab3"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("4a9135ed-5996-4039-b193-48224a46f578"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8328),
                            ManufacturerId = new Guid("192e276f-c218-4aca-a2b3-b028bcdd9565"),
                            Name = "Sản phẩm 12 - Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("a2b2831b-b0a0-495a-931e-2ffc1b0d407b"),
                            AttributeName = "Dung tích",
                            AttributeUnit = "lít",
                            CategoryId = new Guid("c96caa06-b37c-4bce-b1ab-9617d4cc8b25"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8338),
                            ManufacturerId = new Guid("3c482e5f-280b-43bf-a892-1ee951e0a54c"),
                            Name = "Sản phẩm 13 - Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("0ea7cd28-5319-43c6-a794-9b3443bd6886"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("7c0ab97b-8fca-4def-9641-c1eb7b954401"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8349),
                            ManufacturerId = new Guid("9adbb974-f118-48c8-911f-a682aa1da0ab"),
                            Name = "Sản phẩm 14 - Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("39f89dd1-8dd5-4e84-a212-f7d0e8a819fa"),
                            AttributeName = "Loại mồi",
                            AttributeUnit = "",
                            CategoryId = new Guid("fdafc182-8aec-4b11-b364-73409f2e725e"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8358),
                            ManufacturerId = new Guid("631768d1-cd37-447f-bce0-fbbc03f5d543"),
                            Name = "Sản phẩm 15 - Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("9e893e2e-fa9b-4286-9bb9-fa158fff56dd"),
                            AttributeName = "Chất liệu",
                            AttributeUnit = "",
                            CategoryId = new Guid("6db8ef9e-bf35-4109-92b7-d954dc09b676"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8370),
                            ManufacturerId = new Guid("8a82f859-48af-4280-a438-33aae6d35db8"),
                            Name = "Sản phẩm 16 - Gác cần",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("02fdb70e-f3d2-45f4-bc33-668a201c5600"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("8b0d1f15-67b9-47f5-9ced-d45730f48bd4"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8379),
                            ManufacturerId = new Guid("e24b6a19-e02a-47ca-a1d4-2be2b823e8b2"),
                            Name = "Sản phẩm 17 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("e8608b9b-98cb-4fa6-bee7-ddd1d5e7bbce"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("8ad4464c-ace7-48c5-baf5-4fe15c243d5a"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8421),
                            ManufacturerId = new Guid("4844c4d0-bfe0-48db-814d-0a3a3709e496"),
                            Name = "Sản phẩm 18 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("e36865e7-cee7-48f1-8640-684666aaba8a"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("d1f642d0-f86f-4c51-907d-b704af45efb9"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8432),
                            ManufacturerId = new Guid("54d77a39-7027-43f3-b6dd-4d6d4a611aa3"),
                            Name = "Sản phẩm 19 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("4682476d-cded-4967-b52b-d5660372223a"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("4a9135ed-5996-4039-b193-48224a46f578"),
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8444),
                            ManufacturerId = new Guid("95b8ef4d-75e4-4003-9849-e67363d24cc9"),
                            Name = "Sản phẩm 20 - Phao",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56334688-b604-4ab0-a461-7982cb91ebf9"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7965),
                            Description = "Biến thể 1 của Sản phẩm 1 - Cần câu đài",
                            Price = 150000m,
                            ProductId = new Guid("31438e07-2be9-48c9-981d-68c41b19e9d2"),
                            Status = "1",
                            Stock = 20m
                        },
                        new
                        {
                            Id = new Guid("d191a4de-6b33-481f-9dc5-8154ca32d0b0"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7970),
                            Description = "Biến thể 2 của Sản phẩm 1 - Cần câu đài",
                            Price = 200000m,
                            ProductId = new Guid("31438e07-2be9-48c9-981d-68c41b19e9d2"),
                            Status = "1",
                            Stock = 15m
                        },
                        new
                        {
                            Id = new Guid("b21aa2fb-2004-4720-913d-7b96c1dda3d6"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7975),
                            Description = "Biến thể 3 của Sản phẩm 1 - Cần câu đài",
                            Price = 250000m,
                            ProductId = new Guid("31438e07-2be9-48c9-981d-68c41b19e9d2"),
                            Status = "1",
                            Stock = 10m
                        },
                        new
                        {
                            Id = new Guid("5676af76-4875-4cf0-89ff-7924cde8fbfe"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7991),
                            Description = "Biến thể 1 của Sản phẩm 2 - Trục",
                            Price = 300000m,
                            ProductId = new Guid("c6ef944b-fcd4-4bbd-a165-0ce012c09f25"),
                            Status = "1",
                            Stock = 25m
                        },
                        new
                        {
                            Id = new Guid("8d5f2803-75a5-4051-8191-4cdd931bc98a"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7993),
                            Description = "Biến thể 2 của Sản phẩm 2 - Trục",
                            Price = 350000m,
                            ProductId = new Guid("c6ef944b-fcd4-4bbd-a165-0ce012c09f25"),
                            Status = "1",
                            Stock = 20m
                        },
                        new
                        {
                            Id = new Guid("8c3bd5dc-4f9d-475e-8803-3c9d2ed821aa"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(7996),
                            Description = "Biến thể 3 của Sản phẩm 2 - Trục",
                            Price = 400000m,
                            ProductId = new Guid("c6ef944b-fcd4-4bbd-a165-0ce012c09f25"),
                            Status = "1",
                            Stock = 15m
                        },
                        new
                        {
                            Id = new Guid("a5b1de64-f0f0-418e-bc10-da47d8bacc8a"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8003),
                            Description = "Biến thể 1 của Sản phẩm 3 - Thẻo",
                            Price = 50000m,
                            ProductId = new Guid("22076318-3e87-471c-bf2a-bf8db27ae496"),
                            Status = "1",
                            Stock = 50m
                        },
                        new
                        {
                            Id = new Guid("4c4980ba-6f09-4b55-9874-f8dfa276643d"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8005),
                            Description = "Biến thể 2 của Sản phẩm 3 - Thẻo",
                            Price = 60000m,
                            ProductId = new Guid("22076318-3e87-471c-bf2a-bf8db27ae496"),
                            Status = "1",
                            Stock = 40m
                        },
                        new
                        {
                            Id = new Guid("0c22603b-49b4-4fc6-ab42-3ad7a030641e"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8011),
                            Description = "Biến thể 3 của Sản phẩm 3 - Thẻo",
                            Price = 70000m,
                            ProductId = new Guid("22076318-3e87-471c-bf2a-bf8db27ae496"),
                            Status = "1",
                            Stock = 30m
                        },
                        new
                        {
                            Id = new Guid("bbf660a2-05d9-4024-b497-e70004f0fe70"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8017),
                            Description = "Biến thể 1 của Sản phẩm 4 - Phao",
                            Price = 20000m,
                            ProductId = new Guid("cc7e3878-a10c-40da-a621-53d2034ad629"),
                            Status = "1",
                            Stock = 60m
                        },
                        new
                        {
                            Id = new Guid("35a0b6a1-14f2-49cf-9b58-b2a3113b3900"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8020),
                            Description = "Biến thể 2 của Sản phẩm 4 - Phao",
                            Price = 25000m,
                            ProductId = new Guid("cc7e3878-a10c-40da-a621-53d2034ad629"),
                            Status = "1",
                            Stock = 50m
                        },
                        new
                        {
                            Id = new Guid("e72b92b4-c255-47f6-9abc-b3ca8e81461b"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8052),
                            Description = "Biến thể 3 của Sản phẩm 4 - Phao",
                            Price = 30000m,
                            ProductId = new Guid("cc7e3878-a10c-40da-a621-53d2034ad629"),
                            Status = "1",
                            Stock = 40m
                        },
                        new
                        {
                            Id = new Guid("ab716a65-380f-4964-abaa-e2f0597b8a9e"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8059),
                            Description = "Biến thể 1 của Sản phẩm 5 - Thùng câu",
                            Price = 500000m,
                            ProductId = new Guid("33a7bbe5-cbea-46ba-9984-99e9cdbceb5c"),
                            Status = "1",
                            Stock = 10m
                        },
                        new
                        {
                            Id = new Guid("b1f97053-923e-451c-9116-0be21f1bf89c"),
                            AttributeValue = "40",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8062),
                            Description = "Biến thể 2 của Sản phẩm 5 - Thùng câu",
                            Price = 600000m,
                            ProductId = new Guid("33a7bbe5-cbea-46ba-9984-99e9cdbceb5c"),
                            Status = "1",
                            Stock = 8m
                        },
                        new
                        {
                            Id = new Guid("934d221f-613d-466b-819a-1748de7001de"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8067),
                            Description = "Biến thể 3 của Sản phẩm 5 - Thùng câu",
                            Price = 700000m,
                            ProductId = new Guid("33a7bbe5-cbea-46ba-9984-99e9cdbceb5c"),
                            Status = "1",
                            Stock = 6m
                        },
                        new
                        {
                            Id = new Guid("a5493552-e871-4d24-85c6-eccca4fb5b31"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8072),
                            Description = "Biến thể 1 của Sản phẩm 6 - Giọ",
                            Price = 100000m,
                            ProductId = new Guid("4cac83f3-1cac-4886-88cb-c5007695eb5c"),
                            Status = "1",
                            Stock = 30m
                        },
                        new
                        {
                            Id = new Guid("94d42825-a143-44cf-984d-ae650cb87335"),
                            AttributeValue = "60",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8075),
                            Description = "Biến thể 2 của Sản phẩm 6 - Giọ",
                            Price = 120000m,
                            ProductId = new Guid("4cac83f3-1cac-4886-88cb-c5007695eb5c"),
                            Status = "1",
                            Stock = 25m
                        },
                        new
                        {
                            Id = new Guid("4965259c-4ddd-47ab-8de6-fc906e72141a"),
                            AttributeValue = "70",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8079),
                            Description = "Biến thể 3 của Sản phẩm 6 - Giọ",
                            Price = 140000m,
                            ProductId = new Guid("4cac83f3-1cac-4886-88cb-c5007695eb5c"),
                            Status = "1",
                            Stock = 20m
                        },
                        new
                        {
                            Id = new Guid("9f49fadc-6003-42c6-9859-60058776dbb9"),
                            AttributeValue = "Mồi giả",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8220),
                            Description = "Biến thể 1 của Sản phẩm 7 - Mồi",
                            Price = 30000m,
                            ProductId = new Guid("2df3ac10-4309-400e-a6ca-6a92b681268a"),
                            Status = "1",
                            Stock = 100m
                        },
                        new
                        {
                            Id = new Guid("22eb3c37-f0cb-4cac-8c06-d773658b4db3"),
                            AttributeValue = "Mồi tự nhiên",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8222),
                            Description = "Biến thể 2 của Sản phẩm 7 - Mồi",
                            Price = 35000m,
                            ProductId = new Guid("2df3ac10-4309-400e-a6ca-6a92b681268a"),
                            Status = "1",
                            Stock = 90m
                        },
                        new
                        {
                            Id = new Guid("b0611d88-9162-446e-9211-a7eb4f0a3fb6"),
                            AttributeValue = "Mồi tổng hợp",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8227),
                            Description = "Biến thể 3 của Sản phẩm 7 - Mồi",
                            Price = 40000m,
                            ProductId = new Guid("2df3ac10-4309-400e-a6ca-6a92b681268a"),
                            Status = "1",
                            Stock = 80m
                        },
                        new
                        {
                            Id = new Guid("e778c386-2a86-4154-b855-e8df3278fe5f"),
                            AttributeValue = "Nhôm",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8232),
                            Description = "Biến thể 1 của Sản phẩm 8 - Gác cần",
                            Price = 80000m,
                            ProductId = new Guid("da29e6be-6af1-4b7d-b6e8-eb7aa3b22711"),
                            Status = "1",
                            Stock = 35m
                        },
                        new
                        {
                            Id = new Guid("27c24ac6-04fb-4e4b-adac-6ebdfef24cca"),
                            AttributeValue = "Thép",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8234),
                            Description = "Biến thể 2 của Sản phẩm 8 - Gác cần",
                            Price = 90000m,
                            ProductId = new Guid("da29e6be-6af1-4b7d-b6e8-eb7aa3b22711"),
                            Status = "1",
                            Stock = 30m
                        },
                        new
                        {
                            Id = new Guid("55549a61-2e89-4ce9-b974-fbff839615cf"),
                            AttributeValue = "Carbon",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8239),
                            Description = "Biến thể 3 của Sản phẩm 8 - Gác cần",
                            Price = 100000m,
                            ProductId = new Guid("da29e6be-6af1-4b7d-b6e8-eb7aa3b22711"),
                            Status = "1",
                            Stock = 25m
                        },
                        new
                        {
                            Id = new Guid("cfd54765-5c74-49a9-830c-397697f72070"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8245),
                            Description = "Biến thể 1 của Sản phẩm 9 - Cần câu đài",
                            Price = 160000m,
                            ProductId = new Guid("bbcce8d1-9cf3-4de2-8a37-8d69bc308034"),
                            Status = "1",
                            Stock = 18m
                        },
                        new
                        {
                            Id = new Guid("6cd37228-cbf0-4c97-92e9-540734fdd7ac"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8247),
                            Description = "Biến thể 2 của Sản phẩm 9 - Cần câu đài",
                            Price = 210000m,
                            ProductId = new Guid("bbcce8d1-9cf3-4de2-8a37-8d69bc308034"),
                            Status = "1",
                            Stock = 14m
                        },
                        new
                        {
                            Id = new Guid("ffe35dcf-1fe4-4bda-944c-b0e30b152d1d"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8251),
                            Description = "Biến thể 3 của Sản phẩm 9 - Cần câu đài",
                            Price = 260000m,
                            ProductId = new Guid("bbcce8d1-9cf3-4de2-8a37-8d69bc308034"),
                            Status = "1",
                            Stock = 12m
                        },
                        new
                        {
                            Id = new Guid("1781dfa8-9725-4e70-9018-add3e65c6cf1"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8257),
                            Description = "Biến thể 1 của Sản phẩm 10 - Trục",
                            Price = 310000m,
                            ProductId = new Guid("e9d972a0-97a1-4123-ba04-42ca718a114a"),
                            Status = "1",
                            Stock = 22m
                        },
                        new
                        {
                            Id = new Guid("410312bf-809a-47aa-b6e9-ab7df37ae24c"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8260),
                            Description = "Biến thể 2 của Sản phẩm 10 - Trục",
                            Price = 360000m,
                            ProductId = new Guid("e9d972a0-97a1-4123-ba04-42ca718a114a"),
                            Status = "1",
                            Stock = 18m
                        },
                        new
                        {
                            Id = new Guid("168e5996-c3c4-49da-b1ca-6a84b97b968e"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8262),
                            Description = "Biến thể 3 của Sản phẩm 10 - Trục",
                            Price = 410000m,
                            ProductId = new Guid("e9d972a0-97a1-4123-ba04-42ca718a114a"),
                            Status = "1",
                            Stock = 14m
                        },
                        new
                        {
                            Id = new Guid("3943f55b-8072-4338-a110-5d25c814ab11"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8266),
                            Description = "Biến thể 1 của Sản phẩm 11 - Thẻo",
                            Price = 55000m,
                            ProductId = new Guid("d0256592-aaec-4c9f-a378-93a970f8b4ce"),
                            Status = "1",
                            Stock = 55m
                        },
                        new
                        {
                            Id = new Guid("1112fc09-d9d1-48d9-ae6d-4e7d9fff7321"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8319),
                            Description = "Biến thể 2 của Sản phẩm 11 - Thẻo",
                            Price = 65000m,
                            ProductId = new Guid("d0256592-aaec-4c9f-a378-93a970f8b4ce"),
                            Status = "1",
                            Stock = 45m
                        },
                        new
                        {
                            Id = new Guid("2555ebd2-b82e-4c9c-bab1-380b68dd0869"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8323),
                            Description = "Biến thể 3 của Sản phẩm 11 - Thẻo",
                            Price = 75000m,
                            ProductId = new Guid("d0256592-aaec-4c9f-a378-93a970f8b4ce"),
                            Status = "1",
                            Stock = 35m
                        },
                        new
                        {
                            Id = new Guid("f782dcdb-14eb-49fe-968a-4229480c9dd9"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8330),
                            Description = "Biến thể 1 của Sản phẩm 12 - Phao",
                            Price = 22000m,
                            ProductId = new Guid("69beb8a2-795c-4aee-842e-06ca9507dab3"),
                            Status = "1",
                            Stock = 65m
                        },
                        new
                        {
                            Id = new Guid("4fd4f4bc-62b0-4f20-8fcb-d8cef923ffb4"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8333),
                            Description = "Biến thể 2 của Sản phẩm 12 - Phao",
                            Price = 27000m,
                            ProductId = new Guid("69beb8a2-795c-4aee-842e-06ca9507dab3"),
                            Status = "1",
                            Stock = 55m
                        },
                        new
                        {
                            Id = new Guid("8fb16279-2734-4bd4-8c74-80f557e3d06d"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8335),
                            Description = "Biến thể 3 của Sản phẩm 12 - Phao",
                            Price = 32000m,
                            ProductId = new Guid("69beb8a2-795c-4aee-842e-06ca9507dab3"),
                            Status = "1",
                            Stock = 45m
                        },
                        new
                        {
                            Id = new Guid("394acc0e-2b2c-420a-b6e8-3dcff1edd905"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8340),
                            Description = "Biến thể 1 của Sản phẩm 13 - Thùng câu",
                            Price = 510000m,
                            ProductId = new Guid("a2b2831b-b0a0-495a-931e-2ffc1b0d407b"),
                            Status = "1",
                            Stock = 12m
                        },
                        new
                        {
                            Id = new Guid("45271892-f3fc-4f85-83c0-80e351a45609"),
                            AttributeValue = "40",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8342),
                            Description = "Biến thể 2 của Sản phẩm 13 - Thùng câu",
                            Price = 610000m,
                            ProductId = new Guid("a2b2831b-b0a0-495a-931e-2ffc1b0d407b"),
                            Status = "1",
                            Stock = 10m
                        },
                        new
                        {
                            Id = new Guid("3c3520ef-8fdc-4ed0-9a7c-5bde0afa7fef"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8346),
                            Description = "Biến thể 3 của Sản phẩm 13 - Thùng câu",
                            Price = 710000m,
                            ProductId = new Guid("a2b2831b-b0a0-495a-931e-2ffc1b0d407b"),
                            Status = "1",
                            Stock = 8m
                        },
                        new
                        {
                            Id = new Guid("e1bb975b-b7b7-4960-90f7-793e952075f2"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8351),
                            Description = "Biến thể 1 của Sản phẩm 14 - Giọ",
                            Price = 110000m,
                            ProductId = new Guid("0ea7cd28-5319-43c6-a794-9b3443bd6886"),
                            Status = "1",
                            Stock = 28m
                        },
                        new
                        {
                            Id = new Guid("9cfb5acb-5547-41c7-88a0-77d7cc84f0a5"),
                            AttributeValue = "60",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8353),
                            Description = "Biến thể 2 của Sản phẩm 14 - Giọ",
                            Price = 130000m,
                            ProductId = new Guid("0ea7cd28-5319-43c6-a794-9b3443bd6886"),
                            Status = "1",
                            Stock = 22m
                        },
                        new
                        {
                            Id = new Guid("6877d051-31ee-4d5d-884c-71a69f17a3fc"),
                            AttributeValue = "70",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8355),
                            Description = "Biến thể 3 của Sản phẩm 14 - Giọ",
                            Price = 150000m,
                            ProductId = new Guid("0ea7cd28-5319-43c6-a794-9b3443bd6886"),
                            Status = "1",
                            Stock = 18m
                        },
                        new
                        {
                            Id = new Guid("f91936c0-6d02-4a5f-92b3-5eaa7909e82d"),
                            AttributeValue = "Mồi giả",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8360),
                            Description = "Biến thể 1 của Sản phẩm 15 - Mồi",
                            Price = 32000m,
                            ProductId = new Guid("39f89dd1-8dd5-4e84-a212-f7d0e8a819fa"),
                            Status = "1",
                            Stock = 95m
                        },
                        new
                        {
                            Id = new Guid("b47a733e-c39c-47d8-b660-8cfaaebfe951"),
                            AttributeValue = "Mồi tự nhiên",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8361),
                            Description = "Biến thể 2 của Sản phẩm 15 - Mồi",
                            Price = 37000m,
                            ProductId = new Guid("39f89dd1-8dd5-4e84-a212-f7d0e8a819fa"),
                            Status = "1",
                            Stock = 85m
                        },
                        new
                        {
                            Id = new Guid("4c5a362c-0c09-4bf0-83aa-6db1d296603c"),
                            AttributeValue = "Mồi tổng hợp",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8365),
                            Description = "Biến thể 3 của Sản phẩm 15 - Mồi",
                            Price = 42000m,
                            ProductId = new Guid("39f89dd1-8dd5-4e84-a212-f7d0e8a819fa"),
                            Status = "1",
                            Stock = 75m
                        },
                        new
                        {
                            Id = new Guid("12028a00-2d43-4b3c-8daa-6ead00f2acf0"),
                            AttributeValue = "Nhôm",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8372),
                            Description = "Biến thể 1 của Sản phẩm 16 - Gác cần",
                            Price = 85000m,
                            ProductId = new Guid("9e893e2e-fa9b-4286-9bb9-fa158fff56dd"),
                            Status = "1",
                            Stock = 32m
                        },
                        new
                        {
                            Id = new Guid("0d0121fa-8b79-4383-9087-e4fc2e28afaf"),
                            AttributeValue = "Thép",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8374),
                            Description = "Biến thể 2 của Sản phẩm 16 - Gác cần",
                            Price = 95000m,
                            ProductId = new Guid("9e893e2e-fa9b-4286-9bb9-fa158fff56dd"),
                            Status = "1",
                            Stock = 28m
                        },
                        new
                        {
                            Id = new Guid("e5f4a414-23b1-4c5a-ac29-76c7cd8e8fb3"),
                            AttributeValue = "Carbon",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8376),
                            Description = "Biến thể 3 của Sản phẩm 16 - Gác cần",
                            Price = 105000m,
                            ProductId = new Guid("9e893e2e-fa9b-4286-9bb9-fa158fff56dd"),
                            Status = "1",
                            Stock = 22m
                        },
                        new
                        {
                            Id = new Guid("ba1a779b-eb0b-4db4-a619-68df6a3f03d4"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8383),
                            Description = "Biến thể 1 của Sản phẩm 17 - Cần câu đài",
                            Price = 170000m,
                            ProductId = new Guid("02fdb70e-f3d2-45f4-bc33-668a201c5600"),
                            Status = "1",
                            Stock = 16m
                        },
                        new
                        {
                            Id = new Guid("53e65416-8c59-4a7a-a3f0-948c19d5d2d4"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8385),
                            Description = "Biến thể 2 của Sản phẩm 17 - Cần câu đài",
                            Price = 220000m,
                            ProductId = new Guid("02fdb70e-f3d2-45f4-bc33-668a201c5600"),
                            Status = "1",
                            Stock = 12m
                        },
                        new
                        {
                            Id = new Guid("55f6da8a-4c33-4c78-9251-8fb7a2510d0c"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8418),
                            Description = "Biến thể 3 của Sản phẩm 17 - Cần câu đài",
                            Price = 270000m,
                            ProductId = new Guid("02fdb70e-f3d2-45f4-bc33-668a201c5600"),
                            Status = "1",
                            Stock = 10m
                        },
                        new
                        {
                            Id = new Guid("e0ed6390-488f-49b4-9af8-3b9107866975"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8423),
                            Description = "Biến thể 1 của Sản phẩm 18 - Trục",
                            Price = 320000m,
                            ProductId = new Guid("e8608b9b-98cb-4fa6-bee7-ddd1d5e7bbce"),
                            Status = "1",
                            Stock = 20m
                        },
                        new
                        {
                            Id = new Guid("4f0f9c9c-30d2-4a1f-80c1-682e923a695c"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8427),
                            Description = "Biến thể 2 của Sản phẩm 18 - Trục",
                            Price = 370000m,
                            ProductId = new Guid("e8608b9b-98cb-4fa6-bee7-ddd1d5e7bbce"),
                            Status = "1",
                            Stock = 16m
                        },
                        new
                        {
                            Id = new Guid("387dc0ee-fd6b-401f-8252-07ddf32c44c7"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8429),
                            Description = "Biến thể 3 của Sản phẩm 18 - Trục",
                            Price = 420000m,
                            ProductId = new Guid("e8608b9b-98cb-4fa6-bee7-ddd1d5e7bbce"),
                            Status = "1",
                            Stock = 12m
                        },
                        new
                        {
                            Id = new Guid("2b27c123-e727-492a-a48f-1e9f4caff926"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8435),
                            Description = "Biến thể 1 của Sản phẩm 19 - Thẻo",
                            Price = 60000m,
                            ProductId = new Guid("e36865e7-cee7-48f1-8640-684666aaba8a"),
                            Status = "1",
                            Stock = 50m
                        },
                        new
                        {
                            Id = new Guid("ae0c4b5c-6797-4889-be7c-154c8238162d"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8437),
                            Description = "Biến thể 2 của Sản phẩm 19 - Thẻo",
                            Price = 70000m,
                            ProductId = new Guid("e36865e7-cee7-48f1-8640-684666aaba8a"),
                            Status = "1",
                            Stock = 40m
                        },
                        new
                        {
                            Id = new Guid("f836a19e-fe54-47d3-a1e7-9e37a07d29ac"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8441),
                            Description = "Biến thể 3 của Sản phẩm 19 - Thẻo",
                            Price = 80000m,
                            ProductId = new Guid("e36865e7-cee7-48f1-8640-684666aaba8a"),
                            Status = "1",
                            Stock = 30m
                        },
                        new
                        {
                            Id = new Guid("14eaae53-dc9b-49cf-9eeb-dedb0f4a9e1a"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8446),
                            Description = "Biến thể 1 của Sản phẩm 20 - Phao",
                            Price = 23000m,
                            ProductId = new Guid("4682476d-cded-4967-b52b-d5660372223a"),
                            Status = "1",
                            Stock = 60m
                        },
                        new
                        {
                            Id = new Guid("a64f9c54-63f9-4230-82eb-3d40dcce4971"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8448),
                            Description = "Biến thể 2 của Sản phẩm 20 - Phao",
                            Price = 28000m,
                            ProductId = new Guid("4682476d-cded-4967-b52b-d5660372223a"),
                            Status = "1",
                            Stock = 50m
                        },
                        new
                        {
                            Id = new Guid("e71443a9-5113-4f21-a090-f658a54f0eff"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 24, 20, 50, 6, 940, DateTimeKind.Local).AddTicks(8450),
                            Description = "Biến thể 3 của Sản phẩm 20 - Phao",
                            Price = 33000m,
                            ProductId = new Guid("4682476d-cded-4967-b52b-d5660372223a"),
                            Status = "1",
                            Stock = 40m
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46e93eb3-9c28-4d87-a0f2-c934f73baa3a"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fishingbee2024@gmail.com",
                            Password = "AQAAAAEAACcQAAAAEO+w+xymiphZOo0689b2mJUacuTEJ3UE/FNan/UfcHxhgkuR6Pop2x0KMp/VeSLorw==",
                            PhoneNumber = "0123456789",
                            Status = "1",
                            UserType = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Data_FishingBee.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("Bills")
                        .HasForeignKey("AdminId");

                    b.HasOne("Data_FishingBee.Models.Coupon", null)
                        .WithMany("Bills")
                        .HasForeignKey("CouponId");

                    b.HasOne("Data_FishingBee.Models.Customer", null)
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Employee", null)
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Cart", "Cart")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Data_FishingBee.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("CustomerSupports")
                        .HasForeignKey("AdminId1");

                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerSupports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Data_FishingBee.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithOne("Inventory")
                        .HasForeignKey("Data_FishingBee.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Inventory", null)
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryId");

                    b.HasOne("Data_FishingBee.Models.Supplier", null)
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Navigation("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");

                    b.Navigation("CustomerActivityLogs");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Cart_PDs");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
