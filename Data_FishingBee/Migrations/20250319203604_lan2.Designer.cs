// <auto-generated />
using System;
using Data_FishingBee.ContextFile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_FishingBee.Migrations
{
    [DbContext(typeof(FishingBeeDbContext))]
    [Migration("20250319203604_lan2")]
    partial class lan2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2a7a1a2-d21f-4966-9e73-a278c45c0c1f"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Default Admin",
                            FullName = "Super Admin",
                            Permissions = "All",
                            Status = "Active",
                            UserId = new Guid("79335e71-e72e-4c9d-af59-686fbb5876ef"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3538),
                            Name = "Cần câu đài",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("6b5fc724-75b0-4fd4-9b66-4fea3bad35a1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3539),
                            Name = "Trục",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("8d786feb-25e8-42de-b232-4ad7f2a41d77"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3539),
                            Name = "Thẻo",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("14611056-2fc9-4dfb-933a-d0d596b629d9"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3540),
                            Name = "Phao",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("d8acf222-51bf-48c3-8af1-1de4f3f1960d"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3541),
                            Name = "Thùng câu",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("21c027db-28e5-40ce-a4bb-40e485875eca"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3542),
                            Name = "Giọ",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("333152b9-dd65-420f-9076-73a2163dd92b"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3542),
                            Name = "Mồi",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("482f77f1-4436-4f47-8c15-bbed4ff8edea"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3543),
                            Name = "Gác cần",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxOfDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOfTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutoLogout")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivityLogs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingForSupport")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3471),
                            Name = "Barfilon",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("a5da89c3-9463-4637-a4de-4f0c1a7c510d"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3482),
                            Name = "Rice Fishing",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("a37bbdff-8319-42b4-968a-bc753475bd3d"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3483),
                            Name = "Handing",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("5ea02b62-b021-41e8-8c65-5fbf4c0a1c87"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3483),
                            Name = "Guide",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("733d7a40-3878-4f19-abdf-a4bf38c75318"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3519),
                            Name = "Gamma Seiko",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b58b9c5-00dd-4f79-9985-becfb5031668"),
                            CategoryId = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3562),
                            ManufacturerId = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            Name = "Barfilon Vân Trung Nguyệt",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("b689b079-52e0-4ee4-9bbb-06acefe40fd1"),
                            CategoryId = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3563),
                            ManufacturerId = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            Name = "Gamma Seiko Bạch Kim",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("1b458e43-9bb5-4e68-bca8-06b06165f848"),
                            CategoryId = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3565),
                            ManufacturerId = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            Name = "Handing Thiết Sa",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("2da61340-cc86-4ade-8e6c-7c37df0fe7f7"),
                            CategoryId = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3566),
                            ManufacturerId = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            Name = "Guide Lục Mạch Thần Kiếm",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("838aae1d-b239-4e5e-af91-e562fcaeea3b"),
                            CategoryId = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3567),
                            ManufacturerId = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            Name = "Guide Thánh Hỏa Lệnh",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("de0bcf62-aab5-4aa0-85e9-2f3046365dde"),
                            CategoryId = new Guid("54f00eec-83be-4bef-95fe-a8109e3d11b1"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3568),
                            ManufacturerId = new Guid("88e9e93a-e3e5-4027-8c5f-d4d536722b1f"),
                            Name = "Rice V5 Silver Carp",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("390387c9-aeca-4cf0-b005-fbd3b7486d52"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3586),
                            Price = 1.599m,
                            ProductId = new Guid("6b58b9c5-00dd-4f79-9985-becfb5031668"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("dd6299cd-fc54-4210-a45e-fbf151fe00b3"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3588),
                            Price = 2.300m,
                            ProductId = new Guid("6b58b9c5-00dd-4f79-9985-becfb5031668"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("8dd68256-e973-4805-9b86-831bd7242d0a"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3589),
                            Price = 1.123m,
                            ProductId = new Guid("b689b079-52e0-4ee4-9bbb-06acefe40fd1"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("64da273e-5216-4603-99b7-cfcf159584b5"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3590),
                            Price = 2.300m,
                            ProductId = new Guid("6b58b9c5-00dd-4f79-9985-becfb5031668"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("ce810ee9-440f-4ab7-9c08-55a93e26c8b8"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3591),
                            Price = 1.123m,
                            ProductId = new Guid("b689b079-52e0-4ee4-9bbb-06acefe40fd1"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("cf14e663-68e1-4d50-a628-8dc6f2a236b6"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3592),
                            Price = 2.300m,
                            ProductId = new Guid("6b58b9c5-00dd-4f79-9985-becfb5031668"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("0dc4e3ee-dc66-44da-b444-3f919a0ec1a9"),
                            CreatedTime = new DateTime(2025, 3, 20, 3, 36, 1, 705, DateTimeKind.Local).AddTicks(3594),
                            Price = 1.123m,
                            ProductId = new Guid("b689b079-52e0-4ee4-9bbb-06acefe40fd1"),
                            Status = "In Stock",
                            Stock = 0m
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId1");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79335e71-e72e-4c9d-af59-686fbb5876ef"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fishingbee2024@gmail.com",
                            Password = "AQAAAAEAACcQAAAAEIo7U2pgZWqEikVfGclnHrLF87afkcdzKVEXRNKQ5Azh3orI05RzsEIENJhBc7sTSA==",
                            PhoneNumber = "0123456789",
                            Status = "Active",
                            UserType = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Data_FishingBee.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("Bills")
                        .HasForeignKey("AdminId");

                    b.HasOne("Data_FishingBee.Models.Coupon", null)
                        .WithMany("Bills")
                        .HasForeignKey("CouponId");

                    b.HasOne("Data_FishingBee.Models.Customer", null)
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Employee", null)
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Cart", "Cart")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Data_FishingBee.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("CustomerSupports")
                        .HasForeignKey("AdminId1");

                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerSupports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Data_FishingBee.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithOne("Inventory")
                        .HasForeignKey("Data_FishingBee.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Inventory", null)
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryId");

                    b.HasOne("Data_FishingBee.Models.Supplier", null)
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Navigation("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");

                    b.Navigation("CustomerActivityLogs");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Cart_PDs");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
