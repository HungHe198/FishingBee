// <auto-generated />
using System;
using Data_FishingBee.ContextFile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_FishingBee.Migrations
{
    [DbContext(typeof(FishingBeeDbContext))]
    partial class FishingBeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7153900c-9d9a-40ed-8675-6abc830ea330"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Default Admin",
                            FullName = "Super Admin",
                            Permissions = "All",
                            Status = "Active",
                            UserId = new Guid("72ebcc12-c5e7-493a-841c-dade0c6f15ab"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3617),
                            Name = "Cần câu đài",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("6034d9c2-6ec4-4666-8fdf-b22e8307bc72"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3618),
                            Name = "Trục",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("7361e2b8-5335-4ff2-8046-d73d36fa1fcb"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3619),
                            Name = "Thẻo",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("618ea35d-f64d-4c9b-af9e-f96ec90264a3"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3620),
                            Name = "Phao",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("d2e2480a-0c37-4ac6-bb80-ed59c3937627"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3621),
                            Name = "Thùng câu",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("c0ad7cdd-685b-4060-aba2-a192cbf6040a"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3621),
                            Name = "Giọ",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("2e8e1abb-58e9-43fe-9209-0ff8cc86fc31"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3623),
                            Name = "Mồi",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("b698af9d-2733-4227-9e70-ddfa0f5f1ee2"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3623),
                            Name = "Gác cần",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxOfDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOfTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutoLogout")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivityLogs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingForSupport")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3587),
                            Name = "Barfilon",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("89522100-2f59-4e26-8714-c875c786d86e"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3595),
                            Name = "Rice Fishing",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("d640a42c-2956-47fa-843d-cfedda4568ab"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3596),
                            Name = "Handing",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("7a7cdbad-1090-44e8-bd7c-3920d29b0663"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3597),
                            Name = "Guide",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("723da5ff-9805-4177-94a8-0968ecd3c441"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3598),
                            Name = "Gamma Seiko",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4ce5697-f207-4e11-9117-e924f3fac007"),
                            CategoryId = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3638),
                            ManufacturerId = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            Name = "Barfilon Vân Trung Nguyệt",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("417cde7e-25ab-4a51-bb90-d25486b93787"),
                            CategoryId = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3640),
                            ManufacturerId = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            Name = "Gamma Seiko Bạch Kim",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("8ae21064-c6be-440b-abc1-ff7d8b460d7f"),
                            CategoryId = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3641),
                            ManufacturerId = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            Name = "Handing Thiết Sa",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("4d11619a-7d66-4722-b200-032922659d43"),
                            CategoryId = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3641),
                            ManufacturerId = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            Name = "Guide Lục Mạch Thần Kiếm",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("fb7c6b9c-e691-4b29-a518-6abc5ae79457"),
                            CategoryId = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3642),
                            ManufacturerId = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            Name = "Guide Thánh Hỏa Lệnh",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("ef83a96e-9482-4fdf-986e-8ae6e10fb73c"),
                            CategoryId = new Guid("ff21bed1-901d-4004-aea2-b2b04a63e5e4"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3643),
                            ManufacturerId = new Guid("ab1b3c9c-15f9-4b22-b428-84273d931e64"),
                            Name = "Rice V5 Silver Carp",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("136a4a33-8606-464d-a2b0-c418ae638914"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3667),
                            Price = 1.599m,
                            ProductId = new Guid("d4ce5697-f207-4e11-9117-e924f3fac007"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("4cc3cf8d-b879-4b50-b44f-c6bbb6fcb516"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3669),
                            Price = 2.300m,
                            ProductId = new Guid("d4ce5697-f207-4e11-9117-e924f3fac007"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("df0abd76-edfc-4910-8618-5c234567195c"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3671),
                            Price = 1.123m,
                            ProductId = new Guid("417cde7e-25ab-4a51-bb90-d25486b93787"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("ee261384-301d-44ea-90ad-56db4fdbfa72"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3673),
                            Price = 2.300m,
                            ProductId = new Guid("d4ce5697-f207-4e11-9117-e924f3fac007"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("b33171dc-0242-4370-82d2-ea8542553143"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3674),
                            Price = 1.123m,
                            ProductId = new Guid("417cde7e-25ab-4a51-bb90-d25486b93787"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("ee2d0718-fff1-482a-8b1c-8ca263598348"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3675),
                            Price = 2.300m,
                            ProductId = new Guid("d4ce5697-f207-4e11-9117-e924f3fac007"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("fde1b92d-13a6-4180-8109-1e1144deb675"),
                            CreatedTime = new DateTime(2025, 3, 20, 2, 52, 17, 869, DateTimeKind.Local).AddTicks(3676),
                            Price = 1.123m,
                            ProductId = new Guid("417cde7e-25ab-4a51-bb90-d25486b93787"),
                            Status = "In Stock",
                            Stock = 0m
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId1");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72ebcc12-c5e7-493a-841c-dade0c6f15ab"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fishingbee2024@gmail.com",
                            Password = "AQAAAAEAACcQAAAAEHAp6+HlGJ3ZeCdhqyskVZiMLg+7sK07iOWO442qHpExVnp0MIDKeWsSHBRiiajT0Q==",
                            PhoneNumber = "0123456789",
                            Status = "Active",
                            UserType = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Data_FishingBee.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("Bills")
                        .HasForeignKey("AdminId");

                    b.HasOne("Data_FishingBee.Models.Coupon", null)
                        .WithMany("Bills")
                        .HasForeignKey("CouponId");

                    b.HasOne("Data_FishingBee.Models.Customer", null)
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Employee", null)
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Cart", "Cart")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Data_FishingBee.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("CustomerSupports")
                        .HasForeignKey("AdminId1");

                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerSupports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Data_FishingBee.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithOne("Inventory")
                        .HasForeignKey("Data_FishingBee.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Inventory", null)
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryId");

                    b.HasOne("Data_FishingBee.Models.Supplier", null)
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Navigation("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");

                    b.Navigation("CustomerActivityLogs");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Cart_PDs");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
