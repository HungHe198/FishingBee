// <auto-generated />
using System;
using Data_FishingBee.ContextFile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_FishingBee.Migrations
{
    [DbContext(typeof(FishingBeeDbContext))]
    [Migration("20250520150028_lan1")]
    partial class lan1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a1b8f99-3698-4be0-96a7-657a25eb742c"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Default Admin",
                            FullName = "Super Admin",
                            Permissions = "All",
                            Status = "Active",
                            UserId = new Guid("ee334322-9d55-4655-82c2-e634e52aabda"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CartItemViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItemViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1417),
                            Name = "Cần câu đài",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("74aaaf0f-9b90-4eb7-adae-f55ca9afee66"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1418),
                            Name = "Trục",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("a0841849-e713-4b24-9198-f2a74cf7a110"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1418),
                            Name = "Thẻo",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("44a1d238-6a80-4178-ba0e-b6ecb8209553"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1448),
                            Name = "Phao",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("2b05a6f9-5917-4880-8e22-85abc7be96ea"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1449),
                            Name = "Thùng câu",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("0e5e35d1-2d52-407f-bd18-ef1a717d2033"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1450),
                            Name = "Giọ",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("a3f0b55a-0099-4f5a-9778-f1504b2e60db"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1451),
                            Name = "Mồi",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("5928d048-7830-41d6-bc57-2ccaa3b9963a"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1451),
                            Name = "Gác cần",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxOfDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOfTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutoLogout")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivityLogs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingForSupport")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1387),
                            Name = "Barfilon",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("d2b8250e-7cb6-4a87-81c1-2349b7791629"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1396),
                            Name = "Rice Fishing",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("968198d1-4408-4bd1-a3a5-76774c52734f"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1396),
                            Name = "Handing",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("e06243aa-b1a5-4cc9-ace0-78623656a634"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1397),
                            Name = "Guide",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("f871195d-2d9b-4b85-bafe-c17302353399"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1398),
                            Name = "Gamma Seiko",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("540dbbd5-a140-43f7-bb75-c971beba2788"),
                            CategoryId = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1472),
                            ManufacturerId = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            Name = "Barfilon Vân Trung Nguyệt",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("e17ff871-e749-43b3-a7b9-3e1aa8c95196"),
                            CategoryId = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1473),
                            ManufacturerId = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            Name = "Gamma Seiko Bạch Kim",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("8f56fc68-961f-4730-85b3-f20c85df7d13"),
                            CategoryId = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1474),
                            ManufacturerId = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            Name = "Handing Thiết Sa",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("4355cdfd-63d3-4520-8ff4-e6de2e2be7b0"),
                            CategoryId = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1475),
                            ManufacturerId = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            Name = "Guide Lục Mạch Thần Kiếm",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("02c0efe5-08ed-42aa-97ca-6f55be949238"),
                            CategoryId = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1476),
                            ManufacturerId = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            Name = "Guide Thánh Hỏa Lệnh",
                            Status = "Available"
                        },
                        new
                        {
                            Id = new Guid("e2c81fcb-98fe-47d9-9ee5-5e91cb149c24"),
                            CategoryId = new Guid("1b48f783-4536-4ac8-96ef-4553ea8e97e9"),
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1477),
                            ManufacturerId = new Guid("25a950d0-87c5-4c55-8a04-304c95bed93e"),
                            Name = "Rice V5 Silver Carp",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbea5589-8a0a-44bb-8d23-b7dd721b4e7b"),
                            AttributeValue = "631",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1496),
                            Price = 1.599m,
                            ProductId = new Guid("540dbbd5-a140-43f7-bb75-c971beba2788"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("fa9c2267-8ce6-462e-8310-ce325bd7dadb"),
                            AttributeValue = "63",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1498),
                            Price = 2.300m,
                            ProductId = new Guid("540dbbd5-a140-43f7-bb75-c971beba2788"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("13254aee-0b8c-4b71-bd12-366d8a2df186"),
                            AttributeValue = "62",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1499),
                            Price = 1.123m,
                            ProductId = new Guid("e17ff871-e749-43b3-a7b9-3e1aa8c95196"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("282f09e7-cb6d-4cf3-a859-e99b3476b716"),
                            AttributeValue = "1",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1501),
                            Price = 2.300m,
                            ProductId = new Guid("540dbbd5-a140-43f7-bb75-c971beba2788"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("a13fa20d-1491-43b4-8626-4b9726c40e66"),
                            AttributeValue = "632",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1502),
                            Price = 1.123m,
                            ProductId = new Guid("e17ff871-e749-43b3-a7b9-3e1aa8c95196"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("c9a4c95c-5445-48d8-8a15-e50ff417dd4d"),
                            AttributeValue = "6333",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1503),
                            Price = 2.300m,
                            ProductId = new Guid("540dbbd5-a140-43f7-bb75-c971beba2788"),
                            Status = "In Stock",
                            Stock = 0m
                        },
                        new
                        {
                            Id = new Guid("374281a5-9ef0-462a-bc3e-776e6efe7d44"),
                            AttributeValue = "633111",
                            CreatedTime = new DateTime(2025, 5, 20, 22, 0, 27, 771, DateTimeKind.Local).AddTicks(1504),
                            Price = 1.123m,
                            ProductId = new Guid("e17ff871-e749-43b3-a7b9-3e1aa8c95196"),
                            Status = "In Stock",
                            Stock = 0m
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee334322-9d55-4655-82c2-e634e52aabda"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fishingbee2024@gmail.com",
                            Password = "AQAAAAEAACcQAAAAEKlCFko6liYttyATd1fEfEX1R6EEs/Oem4VUst3xzzzseeOuF1YO2UYud4wSA3P8EA==",
                            PhoneNumber = "0123456789",
                            Status = "Active",
                            UserType = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Data_FishingBee.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("Bills")
                        .HasForeignKey("AdminId");

                    b.HasOne("Data_FishingBee.Models.Coupon", null)
                        .WithMany("Bills")
                        .HasForeignKey("CouponId");

                    b.HasOne("Data_FishingBee.Models.Customer", null)
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Employee", null)
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Cart", "Cart")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Data_FishingBee.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("CustomerSupports")
                        .HasForeignKey("AdminId1");

                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerSupports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Data_FishingBee.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithOne("Inventory")
                        .HasForeignKey("Data_FishingBee.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Inventory", null)
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryId");

                    b.HasOne("Data_FishingBee.Models.Supplier", null)
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Navigation("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");

                    b.Navigation("CustomerActivityLogs");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Cart_PDs");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
