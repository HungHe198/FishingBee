// <auto-generated />
using System;
using Data_FishingBee.ContextFile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_FishingBee.Migrations
{
    [DbContext(typeof(FishingBeeDbContext))]
    [Migration("20250530000057_lan1")]
    partial class lan1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fb5fb72-961b-404b-8391-76d41ac6bf61"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Default Admin",
                            FullName = "Super Admin",
                            Permissions = "All",
                            Status = "1",
                            UserId = new Guid("674367af-6d92-42ea-b35d-4637347839c5"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CartItemViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItemViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50cf21c2-6bbc-4edd-b1ae-ff9cd2b5c640"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3584),
                            Name = "Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("1d0a5c47-925a-4ef7-abb5-2775379876e5"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3586),
                            Name = "Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("44c39f6d-65cc-4f0f-b1dc-5916886aebec"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3587),
                            Name = "Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("ef1f65ad-b713-407b-9091-c2c18100242d"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3587),
                            Name = "Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("359813a3-83ef-474c-9d85-5983a0fea813"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3588),
                            Name = "Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("88e6e248-dac8-4a71-b6d7-57a646cf95e4"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3589),
                            Name = "Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("6177a049-5217-4006-bdb0-c9609c99ebfe"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3590),
                            Name = "Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("4ca63409-f2a8-4571-aa50-1fdbfdaa4169"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3592),
                            Name = "Gác cần",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxOfDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOfTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutoLogout")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivityLogs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingForSupport")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e0b6bd9-1556-42b4-8a94-57311888bf40"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3532),
                            Description = "Nhà sản xuất cần câu nổi tiếng từ Nhật Bản",
                            Name = "Daiwa",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("40bda0a9-5446-4b74-97fa-112b024ef882"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3544),
                            Description = "Thương hiệu đồ câu cá hàng đầu thế giới",
                            Name = "Shimano",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("37810cb7-097d-458f-ab21-0b1fdc1e24c9"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3545),
                            Description = "Chuyên sản xuất mồi câu cá",
                            Name = "Rapala",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("dffc33c8-8032-4521-96b3-f1473a0fb910"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3546),
                            Description = "Nhà sản xuất mồi và phụ kiện câu cá",
                            Name = "Berkley",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("de5cfecb-5794-4d78-8828-22cbfcc3f4a8"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3547),
                            Description = "Thương hiệu trục câu nổi tiếng",
                            Name = "Abu Garcia",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("7515168a-bb2d-4a3e-a784-5fe320670fb6"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3548),
                            Description = "Nhà sản xuất đồ câu chất lượng cao",
                            Name = "Okuma",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("bcdef1bd-8d7f-43bd-8c92-6c0f0ee8d103"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3549),
                            Description = "Chuyên về trục và cần câu biển",
                            Name = "Penn",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("d9939265-b197-4912-b7af-26aa8959b4de"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3550),
                            Description = "Nhà sản xuất dây câu chất lượng",
                            Name = "Sufix",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("ad08042d-940a-4a8c-9632-9531d6b79b97"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3551),
                            Description = "Chuyên sản xuất lưỡi câu",
                            Name = "Gamakatsu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("ae4f5137-a7d1-4e49-b6d8-26918b49cc92"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3551),
                            Description = "Thương hiệu lưỡi câu nổi tiếng",
                            Name = "Mustad",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77912245-2de7-471e-bdaf-018ad9f0f846"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("50cf21c2-6bbc-4edd-b1ae-ff9cd2b5c640"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3619),
                            ManufacturerId = new Guid("4e0b6bd9-1556-42b4-8a94-57311888bf40"),
                            Name = "Sản phẩm 1 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("2063aca9-cde4-4919-a8db-2e2886ed1615"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("1d0a5c47-925a-4ef7-abb5-2775379876e5"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3643),
                            ManufacturerId = new Guid("40bda0a9-5446-4b74-97fa-112b024ef882"),
                            Name = "Sản phẩm 2 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("b9ee5c58-0884-449a-8eb8-f85b18ada50a"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("44c39f6d-65cc-4f0f-b1dc-5916886aebec"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3653),
                            ManufacturerId = new Guid("37810cb7-097d-458f-ab21-0b1fdc1e24c9"),
                            Name = "Sản phẩm 3 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("c26fab98-9bea-4303-a6e1-f70f7f871fee"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("ef1f65ad-b713-407b-9091-c2c18100242d"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3705),
                            ManufacturerId = new Guid("dffc33c8-8032-4521-96b3-f1473a0fb910"),
                            Name = "Sản phẩm 4 - Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("590db8c3-cc86-412a-8137-53acae19a4ee"),
                            AttributeName = "Dung tích",
                            AttributeUnit = "lít",
                            CategoryId = new Guid("359813a3-83ef-474c-9d85-5983a0fea813"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3713),
                            ManufacturerId = new Guid("de5cfecb-5794-4d78-8828-22cbfcc3f4a8"),
                            Name = "Sản phẩm 5 - Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("a5a84b81-f914-46e8-b9dc-3a9ac69853eb"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("88e6e248-dac8-4a71-b6d7-57a646cf95e4"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3721),
                            ManufacturerId = new Guid("7515168a-bb2d-4a3e-a784-5fe320670fb6"),
                            Name = "Sản phẩm 6 - Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("340bae4a-825e-4225-9efd-a76be28484b7"),
                            AttributeName = "Loại mồi",
                            AttributeUnit = "",
                            CategoryId = new Guid("6177a049-5217-4006-bdb0-c9609c99ebfe"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3729),
                            ManufacturerId = new Guid("bcdef1bd-8d7f-43bd-8c92-6c0f0ee8d103"),
                            Name = "Sản phẩm 7 - Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("55833496-8dad-471c-bfc8-400c69d77c50"),
                            AttributeName = "Chất liệu",
                            AttributeUnit = "",
                            CategoryId = new Guid("4ca63409-f2a8-4571-aa50-1fdbfdaa4169"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3737),
                            ManufacturerId = new Guid("d9939265-b197-4912-b7af-26aa8959b4de"),
                            Name = "Sản phẩm 8 - Gác cần",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("8f35d0e1-260d-4667-bc7b-c93c728a180b"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("50cf21c2-6bbc-4edd-b1ae-ff9cd2b5c640"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3745),
                            ManufacturerId = new Guid("ad08042d-940a-4a8c-9632-9531d6b79b97"),
                            Name = "Sản phẩm 9 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("05d2bd13-8521-4035-bfb8-338763616e04"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("1d0a5c47-925a-4ef7-abb5-2775379876e5"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3752),
                            ManufacturerId = new Guid("ae4f5137-a7d1-4e49-b6d8-26918b49cc92"),
                            Name = "Sản phẩm 10 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("faa14773-a87d-4928-9805-ffe043ffd734"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("44c39f6d-65cc-4f0f-b1dc-5916886aebec"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3783),
                            ManufacturerId = new Guid("4e0b6bd9-1556-42b4-8a94-57311888bf40"),
                            Name = "Sản phẩm 11 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("13737c51-c345-4f5b-bbba-c77f83769a37"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("ef1f65ad-b713-407b-9091-c2c18100242d"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3791),
                            ManufacturerId = new Guid("40bda0a9-5446-4b74-97fa-112b024ef882"),
                            Name = "Sản phẩm 12 - Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("5ebd6b86-f18c-4ff1-8f00-de9fa00c3c81"),
                            AttributeName = "Dung tích",
                            AttributeUnit = "lít",
                            CategoryId = new Guid("359813a3-83ef-474c-9d85-5983a0fea813"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3799),
                            ManufacturerId = new Guid("37810cb7-097d-458f-ab21-0b1fdc1e24c9"),
                            Name = "Sản phẩm 13 - Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("b0acab70-6b39-4b2a-a359-3c91fb099d01"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("88e6e248-dac8-4a71-b6d7-57a646cf95e4"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3806),
                            ManufacturerId = new Guid("dffc33c8-8032-4521-96b3-f1473a0fb910"),
                            Name = "Sản phẩm 14 - Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("0b141f6d-bbb0-48d9-beb0-72e63047ba3b"),
                            AttributeName = "Loại mồi",
                            AttributeUnit = "",
                            CategoryId = new Guid("6177a049-5217-4006-bdb0-c9609c99ebfe"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3814),
                            ManufacturerId = new Guid("de5cfecb-5794-4d78-8828-22cbfcc3f4a8"),
                            Name = "Sản phẩm 15 - Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("af6c847e-e4e1-447a-90df-c9acc6235bbb"),
                            AttributeName = "Chất liệu",
                            AttributeUnit = "",
                            CategoryId = new Guid("4ca63409-f2a8-4571-aa50-1fdbfdaa4169"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3821),
                            ManufacturerId = new Guid("7515168a-bb2d-4a3e-a784-5fe320670fb6"),
                            Name = "Sản phẩm 16 - Gác cần",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("41fcf891-ea1e-45f8-a29f-023e3001e8e6"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("50cf21c2-6bbc-4edd-b1ae-ff9cd2b5c640"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3828),
                            ManufacturerId = new Guid("bcdef1bd-8d7f-43bd-8c92-6c0f0ee8d103"),
                            Name = "Sản phẩm 17 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("5c6778f2-a040-4af9-b348-2444928c255b"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("1d0a5c47-925a-4ef7-abb5-2775379876e5"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3860),
                            ManufacturerId = new Guid("d9939265-b197-4912-b7af-26aa8959b4de"),
                            Name = "Sản phẩm 18 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("c01bdc82-42c3-4ebf-be46-67658c631632"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("44c39f6d-65cc-4f0f-b1dc-5916886aebec"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3868),
                            ManufacturerId = new Guid("ad08042d-940a-4a8c-9632-9531d6b79b97"),
                            Name = "Sản phẩm 19 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("0c4c9457-1e69-445a-986d-fe1f30e0969f"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("ef1f65ad-b713-407b-9091-c2c18100242d"),
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3873),
                            ManufacturerId = new Guid("ae4f5137-a7d1-4e49-b6d8-26918b49cc92"),
                            Name = "Sản phẩm 20 - Phao",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8130841-74a4-447b-819e-76913e7b34be"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3629),
                            Description = "Biến thể 1 của Sản phẩm 1 - Cần câu đài",
                            Price = 150000m,
                            ProductId = new Guid("77912245-2de7-471e-bdaf-018ad9f0f846"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("a77f269b-c748-4995-9a58-4254683c6324"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3633),
                            Description = "Biến thể 2 của Sản phẩm 1 - Cần câu đài",
                            Price = 200000m,
                            ProductId = new Guid("77912245-2de7-471e-bdaf-018ad9f0f846"),
                            Status = "1",
                            Stock = 15
                        },
                        new
                        {
                            Id = new Guid("d84bf9fc-6b4e-4dc5-8e2e-6da41167ca95"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3634),
                            Description = "Biến thể 3 của Sản phẩm 1 - Cần câu đài",
                            Price = 250000m,
                            ProductId = new Guid("77912245-2de7-471e-bdaf-018ad9f0f846"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("d9bec677-e371-4e3d-9d2a-6f1366bb67bf"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3647),
                            Description = "Biến thể 1 của Sản phẩm 2 - Trục",
                            Price = 300000m,
                            ProductId = new Guid("2063aca9-cde4-4919-a8db-2e2886ed1615"),
                            Status = "1",
                            Stock = 25
                        },
                        new
                        {
                            Id = new Guid("7eaff5ec-968f-49df-9bc3-43a1ce637aea"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3649),
                            Description = "Biến thể 2 của Sản phẩm 2 - Trục",
                            Price = 350000m,
                            ProductId = new Guid("2063aca9-cde4-4919-a8db-2e2886ed1615"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("e347cb86-9880-4f38-ae57-483f60a45205"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3650),
                            Description = "Biến thể 3 của Sản phẩm 2 - Trục",
                            Price = 400000m,
                            ProductId = new Guid("2063aca9-cde4-4919-a8db-2e2886ed1615"),
                            Status = "1",
                            Stock = 15
                        },
                        new
                        {
                            Id = new Guid("0b157f8f-a1b4-4a13-83a9-f3235cc28ea4"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3654),
                            Description = "Biến thể 1 của Sản phẩm 3 - Thẻo",
                            Price = 50000m,
                            ProductId = new Guid("b9ee5c58-0884-449a-8eb8-f85b18ada50a"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("cdcd72fa-e672-4be5-84fd-7cd138c92481"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3658),
                            Description = "Biến thể 2 của Sản phẩm 3 - Thẻo",
                            Price = 60000m,
                            ProductId = new Guid("b9ee5c58-0884-449a-8eb8-f85b18ada50a"),
                            Status = "1",
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("920de269-ea82-4b5f-b0fc-50dba3889bbb"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3660),
                            Description = "Biến thể 3 của Sản phẩm 3 - Thẻo",
                            Price = 70000m,
                            ProductId = new Guid("b9ee5c58-0884-449a-8eb8-f85b18ada50a"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("18646d14-319d-49bb-8701-276b56ea3bc3"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3708),
                            Description = "Biến thể 1 của Sản phẩm 4 - Phao",
                            Price = 20000m,
                            ProductId = new Guid("c26fab98-9bea-4303-a6e1-f70f7f871fee"),
                            Status = "1",
                            Stock = 60
                        },
                        new
                        {
                            Id = new Guid("70e8ef21-ab21-4889-97ad-b80e3bb7c533"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3710),
                            Description = "Biến thể 2 của Sản phẩm 4 - Phao",
                            Price = 25000m,
                            ProductId = new Guid("c26fab98-9bea-4303-a6e1-f70f7f871fee"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("07a0dc92-e51b-4c3e-8547-83ea6ef7f40a"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3711),
                            Description = "Biến thể 3 của Sản phẩm 4 - Phao",
                            Price = 30000m,
                            ProductId = new Guid("c26fab98-9bea-4303-a6e1-f70f7f871fee"),
                            Status = "1",
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("c08210b2-dc77-4526-a061-6f79384bd478"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3716),
                            Description = "Biến thể 1 của Sản phẩm 5 - Thùng câu",
                            Price = 500000m,
                            ProductId = new Guid("590db8c3-cc86-412a-8137-53acae19a4ee"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("bc28d6c2-59f6-4ecd-a27f-f113943ff1f4"),
                            AttributeValue = "40",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3717),
                            Description = "Biến thể 2 của Sản phẩm 5 - Thùng câu",
                            Price = 600000m,
                            ProductId = new Guid("590db8c3-cc86-412a-8137-53acae19a4ee"),
                            Status = "1",
                            Stock = 8
                        },
                        new
                        {
                            Id = new Guid("fd96e039-feed-40cd-a70b-22f57e7c912a"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3719),
                            Description = "Biến thể 3 của Sản phẩm 5 - Thùng câu",
                            Price = 700000m,
                            ProductId = new Guid("590db8c3-cc86-412a-8137-53acae19a4ee"),
                            Status = "1",
                            Stock = 6
                        },
                        new
                        {
                            Id = new Guid("7aa4a3c3-0171-40e0-beab-c86d75c064f6"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3724),
                            Description = "Biến thể 1 của Sản phẩm 6 - Giọ",
                            Price = 100000m,
                            ProductId = new Guid("a5a84b81-f914-46e8-b9dc-3a9ac69853eb"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("bb7e8078-4ff5-463b-95ae-e85e0d7794ab"),
                            AttributeValue = "60",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3725),
                            Description = "Biến thể 2 của Sản phẩm 6 - Giọ",
                            Price = 120000m,
                            ProductId = new Guid("a5a84b81-f914-46e8-b9dc-3a9ac69853eb"),
                            Status = "1",
                            Stock = 25
                        },
                        new
                        {
                            Id = new Guid("ac67bc03-084b-4cb6-a012-091d2260a287"),
                            AttributeValue = "70",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3726),
                            Description = "Biến thể 3 của Sản phẩm 6 - Giọ",
                            Price = 140000m,
                            ProductId = new Guid("a5a84b81-f914-46e8-b9dc-3a9ac69853eb"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("962eac73-745e-470c-8afb-5819d539f614"),
                            AttributeValue = "Mồi giả",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3731),
                            Description = "Biến thể 1 của Sản phẩm 7 - Mồi",
                            Price = 30000m,
                            ProductId = new Guid("340bae4a-825e-4225-9efd-a76be28484b7"),
                            Status = "1",
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("d097057a-9329-4435-bfa6-f67aface897a"),
                            AttributeValue = "Mồi tự nhiên",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3732),
                            Description = "Biến thể 2 của Sản phẩm 7 - Mồi",
                            Price = 35000m,
                            ProductId = new Guid("340bae4a-825e-4225-9efd-a76be28484b7"),
                            Status = "1",
                            Stock = 90
                        },
                        new
                        {
                            Id = new Guid("3885ea88-bfb9-45e2-89ad-12da1c1adb37"),
                            AttributeValue = "Mồi tổng hợp",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3736),
                            Description = "Biến thể 3 của Sản phẩm 7 - Mồi",
                            Price = 40000m,
                            ProductId = new Guid("340bae4a-825e-4225-9efd-a76be28484b7"),
                            Status = "1",
                            Stock = 80
                        },
                        new
                        {
                            Id = new Guid("6e1c147b-f200-4ff9-8d66-b6a3a0981602"),
                            AttributeValue = "Nhôm",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3740),
                            Description = "Biến thể 1 của Sản phẩm 8 - Gác cần",
                            Price = 80000m,
                            ProductId = new Guid("55833496-8dad-471c-bfc8-400c69d77c50"),
                            Status = "1",
                            Stock = 35
                        },
                        new
                        {
                            Id = new Guid("6240c634-d3b5-44cb-afb0-2bac585878e4"),
                            AttributeValue = "Thép",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3741),
                            Description = "Biến thể 2 của Sản phẩm 8 - Gác cần",
                            Price = 90000m,
                            ProductId = new Guid("55833496-8dad-471c-bfc8-400c69d77c50"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("adc56c02-bc1b-4b48-8e88-8a1cad691349"),
                            AttributeValue = "Carbon",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3743),
                            Description = "Biến thể 3 của Sản phẩm 8 - Gác cần",
                            Price = 100000m,
                            ProductId = new Guid("55833496-8dad-471c-bfc8-400c69d77c50"),
                            Status = "1",
                            Stock = 25
                        },
                        new
                        {
                            Id = new Guid("df6cffe9-10de-48c2-b578-21ce8792e237"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3747),
                            Description = "Biến thể 1 của Sản phẩm 9 - Cần câu đài",
                            Price = 160000m,
                            ProductId = new Guid("8f35d0e1-260d-4667-bc7b-c93c728a180b"),
                            Status = "1",
                            Stock = 18
                        },
                        new
                        {
                            Id = new Guid("dd2c36cd-8c09-48a0-9f7c-1a543948bb49"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3749),
                            Description = "Biến thể 2 của Sản phẩm 9 - Cần câu đài",
                            Price = 210000m,
                            ProductId = new Guid("8f35d0e1-260d-4667-bc7b-c93c728a180b"),
                            Status = "1",
                            Stock = 14
                        },
                        new
                        {
                            Id = new Guid("da50230a-5ec8-4bd0-b404-0cd6a016199f"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3750),
                            Description = "Biến thể 3 của Sản phẩm 9 - Cần câu đài",
                            Price = 260000m,
                            ProductId = new Guid("8f35d0e1-260d-4667-bc7b-c93c728a180b"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("8ea8887f-04d7-4083-aa7f-2675d05dbb5b"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3754),
                            Description = "Biến thể 1 của Sản phẩm 10 - Trục",
                            Price = 310000m,
                            ProductId = new Guid("05d2bd13-8521-4035-bfb8-338763616e04"),
                            Status = "1",
                            Stock = 22
                        },
                        new
                        {
                            Id = new Guid("de09ef18-b701-4789-a47d-adb945b2f3d0"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3780),
                            Description = "Biến thể 2 của Sản phẩm 10 - Trục",
                            Price = 360000m,
                            ProductId = new Guid("05d2bd13-8521-4035-bfb8-338763616e04"),
                            Status = "1",
                            Stock = 18
                        },
                        new
                        {
                            Id = new Guid("6e5f835f-6e26-48af-a760-5bc79abd0819"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3782),
                            Description = "Biến thể 3 của Sản phẩm 10 - Trục",
                            Price = 410000m,
                            ProductId = new Guid("05d2bd13-8521-4035-bfb8-338763616e04"),
                            Status = "1",
                            Stock = 14
                        },
                        new
                        {
                            Id = new Guid("59d8ccd4-aac7-47fa-9de6-d9ee9b4b9a1a"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3785),
                            Description = "Biến thể 1 của Sản phẩm 11 - Thẻo",
                            Price = 55000m,
                            ProductId = new Guid("faa14773-a87d-4928-9805-ffe043ffd734"),
                            Status = "1",
                            Stock = 55
                        },
                        new
                        {
                            Id = new Guid("1565e2dd-ee67-4665-81bd-65520fbdc291"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3787),
                            Description = "Biến thể 2 của Sản phẩm 11 - Thẻo",
                            Price = 65000m,
                            ProductId = new Guid("faa14773-a87d-4928-9805-ffe043ffd734"),
                            Status = "1",
                            Stock = 45
                        },
                        new
                        {
                            Id = new Guid("f3cf143a-3db0-4b7e-8d9c-cec1e511ca04"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3788),
                            Description = "Biến thể 3 của Sản phẩm 11 - Thẻo",
                            Price = 75000m,
                            ProductId = new Guid("faa14773-a87d-4928-9805-ffe043ffd734"),
                            Status = "1",
                            Stock = 35
                        },
                        new
                        {
                            Id = new Guid("52e67a7b-785d-4f47-acb6-bc500c5330ff"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3794),
                            Description = "Biến thể 1 của Sản phẩm 12 - Phao",
                            Price = 22000m,
                            ProductId = new Guid("13737c51-c345-4f5b-bbba-c77f83769a37"),
                            Status = "1",
                            Stock = 65
                        },
                        new
                        {
                            Id = new Guid("203d71c4-bb91-420e-b7c5-f27c85d2e3e9"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3795),
                            Description = "Biến thể 2 của Sản phẩm 12 - Phao",
                            Price = 27000m,
                            ProductId = new Guid("13737c51-c345-4f5b-bbba-c77f83769a37"),
                            Status = "1",
                            Stock = 55
                        },
                        new
                        {
                            Id = new Guid("240a5f6a-4416-40e6-84c6-93bfac67b62d"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3797),
                            Description = "Biến thể 3 của Sản phẩm 12 - Phao",
                            Price = 32000m,
                            ProductId = new Guid("13737c51-c345-4f5b-bbba-c77f83769a37"),
                            Status = "1",
                            Stock = 45
                        },
                        new
                        {
                            Id = new Guid("52149f90-0afc-4124-acf9-fec6d2796aa2"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3801),
                            Description = "Biến thể 1 của Sản phẩm 13 - Thùng câu",
                            Price = 510000m,
                            ProductId = new Guid("5ebd6b86-f18c-4ff1-8f00-de9fa00c3c81"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("bf773f50-07d2-4891-83fc-6d3d504c84ea"),
                            AttributeValue = "40",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3803),
                            Description = "Biến thể 2 của Sản phẩm 13 - Thùng câu",
                            Price = 610000m,
                            ProductId = new Guid("5ebd6b86-f18c-4ff1-8f00-de9fa00c3c81"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("e97e86e1-d583-4222-8355-cc241ae560b9"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3804),
                            Description = "Biến thể 3 của Sản phẩm 13 - Thùng câu",
                            Price = 710000m,
                            ProductId = new Guid("5ebd6b86-f18c-4ff1-8f00-de9fa00c3c81"),
                            Status = "1",
                            Stock = 8
                        },
                        new
                        {
                            Id = new Guid("ea07fff7-b097-45c6-a9ff-448043888722"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3809),
                            Description = "Biến thể 1 của Sản phẩm 14 - Giọ",
                            Price = 110000m,
                            ProductId = new Guid("b0acab70-6b39-4b2a-a359-3c91fb099d01"),
                            Status = "1",
                            Stock = 28
                        },
                        new
                        {
                            Id = new Guid("54f4e706-adda-45e6-bd0b-22006d12144f"),
                            AttributeValue = "60",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3810),
                            Description = "Biến thể 2 của Sản phẩm 14 - Giọ",
                            Price = 130000m,
                            ProductId = new Guid("b0acab70-6b39-4b2a-a359-3c91fb099d01"),
                            Status = "1",
                            Stock = 22
                        },
                        new
                        {
                            Id = new Guid("27ab3e87-1658-40f8-b82e-4c6620389117"),
                            AttributeValue = "70",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3813),
                            Description = "Biến thể 3 của Sản phẩm 14 - Giọ",
                            Price = 150000m,
                            ProductId = new Guid("b0acab70-6b39-4b2a-a359-3c91fb099d01"),
                            Status = "1",
                            Stock = 18
                        },
                        new
                        {
                            Id = new Guid("7da9e27e-3c1e-4653-821f-93bd3560c7c1"),
                            AttributeValue = "Mồi giả",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3816),
                            Description = "Biến thể 1 của Sản phẩm 15 - Mồi",
                            Price = 32000m,
                            ProductId = new Guid("0b141f6d-bbb0-48d9-beb0-72e63047ba3b"),
                            Status = "1",
                            Stock = 95
                        },
                        new
                        {
                            Id = new Guid("071e6cbe-4a67-43f5-9f94-662008fa4275"),
                            AttributeValue = "Mồi tự nhiên",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3818),
                            Description = "Biến thể 2 của Sản phẩm 15 - Mồi",
                            Price = 37000m,
                            ProductId = new Guid("0b141f6d-bbb0-48d9-beb0-72e63047ba3b"),
                            Status = "1",
                            Stock = 85
                        },
                        new
                        {
                            Id = new Guid("5e278e2d-e5a6-4785-8dc8-51f2f3c346be"),
                            AttributeValue = "Mồi tổng hợp",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3819),
                            Description = "Biến thể 3 của Sản phẩm 15 - Mồi",
                            Price = 42000m,
                            ProductId = new Guid("0b141f6d-bbb0-48d9-beb0-72e63047ba3b"),
                            Status = "1",
                            Stock = 75
                        },
                        new
                        {
                            Id = new Guid("5663bc40-4c4f-4271-9a90-3a123cf82e74"),
                            AttributeValue = "Nhôm",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3823),
                            Description = "Biến thể 1 của Sản phẩm 16 - Gác cần",
                            Price = 85000m,
                            ProductId = new Guid("af6c847e-e4e1-447a-90df-c9acc6235bbb"),
                            Status = "1",
                            Stock = 32
                        },
                        new
                        {
                            Id = new Guid("d24c4c78-886a-4fd1-8e76-de046ae3c6f8"),
                            AttributeValue = "Thép",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3825),
                            Description = "Biến thể 2 của Sản phẩm 16 - Gác cần",
                            Price = 95000m,
                            ProductId = new Guid("af6c847e-e4e1-447a-90df-c9acc6235bbb"),
                            Status = "1",
                            Stock = 28
                        },
                        new
                        {
                            Id = new Guid("8bb8acba-ee23-4995-b9c0-6b6b603ccb4c"),
                            AttributeValue = "Carbon",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3826),
                            Description = "Biến thể 3 của Sản phẩm 16 - Gác cần",
                            Price = 105000m,
                            ProductId = new Guid("af6c847e-e4e1-447a-90df-c9acc6235bbb"),
                            Status = "1",
                            Stock = 22
                        },
                        new
                        {
                            Id = new Guid("bb04a2c1-8a76-47e1-aa1d-52dbf953d308"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3855),
                            Description = "Biến thể 1 của Sản phẩm 17 - Cần câu đài",
                            Price = 170000m,
                            ProductId = new Guid("41fcf891-ea1e-45f8-a29f-023e3001e8e6"),
                            Status = "1",
                            Stock = 16
                        },
                        new
                        {
                            Id = new Guid("b247ffc7-5113-41f9-b6f6-5f0177b8db04"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3857),
                            Description = "Biến thể 2 của Sản phẩm 17 - Cần câu đài",
                            Price = 220000m,
                            ProductId = new Guid("41fcf891-ea1e-45f8-a29f-023e3001e8e6"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("5658ef33-0723-41e1-8018-ae7951789748"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3858),
                            Description = "Biến thể 3 của Sản phẩm 17 - Cần câu đài",
                            Price = 270000m,
                            ProductId = new Guid("41fcf891-ea1e-45f8-a29f-023e3001e8e6"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("fb0f65f0-4ab5-4128-a0ce-a8ceb722167d"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3863),
                            Description = "Biến thể 1 của Sản phẩm 18 - Trục",
                            Price = 320000m,
                            ProductId = new Guid("5c6778f2-a040-4af9-b348-2444928c255b"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("acf7088c-3721-4b81-9772-21f06805e1c8"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3865),
                            Description = "Biến thể 2 của Sản phẩm 18 - Trục",
                            Price = 370000m,
                            ProductId = new Guid("5c6778f2-a040-4af9-b348-2444928c255b"),
                            Status = "1",
                            Stock = 16
                        },
                        new
                        {
                            Id = new Guid("427146ba-daa7-4cbf-8bc9-c4e8d99b9987"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3866),
                            Description = "Biến thể 3 của Sản phẩm 18 - Trục",
                            Price = 420000m,
                            ProductId = new Guid("5c6778f2-a040-4af9-b348-2444928c255b"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("c276bd85-2fcc-4cfd-a4a1-896e5204dc06"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3869),
                            Description = "Biến thể 1 của Sản phẩm 19 - Thẻo",
                            Price = 60000m,
                            ProductId = new Guid("c01bdc82-42c3-4ebf-be46-67658c631632"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("afab228d-db72-42d7-bc56-36b362ffeaf0"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3870),
                            Description = "Biến thể 2 của Sản phẩm 19 - Thẻo",
                            Price = 70000m,
                            ProductId = new Guid("c01bdc82-42c3-4ebf-be46-67658c631632"),
                            Status = "1",
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("4f67af0d-0c0b-45e4-91f3-0ed8eddc4fca"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3872),
                            Description = "Biến thể 3 của Sản phẩm 19 - Thẻo",
                            Price = 80000m,
                            ProductId = new Guid("c01bdc82-42c3-4ebf-be46-67658c631632"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("2378d418-ff61-4d44-9b00-dbd9b15d694b"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3876),
                            Description = "Biến thể 1 của Sản phẩm 20 - Phao",
                            Price = 23000m,
                            ProductId = new Guid("0c4c9457-1e69-445a-986d-fe1f30e0969f"),
                            Status = "1",
                            Stock = 60
                        },
                        new
                        {
                            Id = new Guid("b698f39e-ce60-46b4-ba35-bd64e243556c"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3877),
                            Description = "Biến thể 2 của Sản phẩm 20 - Phao",
                            Price = 28000m,
                            ProductId = new Guid("0c4c9457-1e69-445a-986d-fe1f30e0969f"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("9a39a043-8375-4d41-9590-2b15dec278ab"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 30, 7, 0, 56, 508, DateTimeKind.Local).AddTicks(3879),
                            Description = "Biến thể 3 của Sản phẩm 20 - Phao",
                            Price = 33000m,
                            ProductId = new Guid("0c4c9457-1e69-445a-986d-fe1f30e0969f"),
                            Status = "1",
                            Stock = 40
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("674367af-6d92-42ea-b35d-4637347839c5"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fishingbee2024@gmail.com",
                            Password = "AQAAAAEAACcQAAAAEL9IgiIQTdAGw/yHRLdbhIeCHUumdBTcK3fArvjDdF1jBigsOIZylQsBlP+PXZ/jiQ==",
                            PhoneNumber = "0123456789",
                            Status = "1",
                            UserType = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Data_FishingBee.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("Bills")
                        .HasForeignKey("AdminId");

                    b.HasOne("Data_FishingBee.Models.Coupon", null)
                        .WithMany("Bills")
                        .HasForeignKey("CouponId");

                    b.HasOne("Data_FishingBee.Models.Customer", null)
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Employee", null)
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Cart", "Cart")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Data_FishingBee.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("CustomerSupports")
                        .HasForeignKey("AdminId1");

                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerSupports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Data_FishingBee.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithOne("Inventory")
                        .HasForeignKey("Data_FishingBee.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Inventory", null)
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryId");

                    b.HasOne("Data_FishingBee.Models.Supplier", null)
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Navigation("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");

                    b.Navigation("CustomerActivityLogs");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Cart_PDs");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
