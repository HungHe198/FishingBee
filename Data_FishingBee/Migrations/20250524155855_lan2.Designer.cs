// <auto-generated />
using System;
using Data_FishingBee.ContextFile;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_FishingBee.Migrations
{
    [DbContext(typeof(FishingBeeDbContext))]
    [Migration("20250524155855_lan2")]
    partial class lan2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8cc1bb0e-b169-49d3-ab35-a453ff57fcee"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Default Admin",
                            FullName = "Super Admin",
                            Permissions = "All",
                            Status = "1",
                            UserId = new Guid("c54b913e-9c30-4388-8de8-ea5a71aa7caf"),
                            UserType = "Admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CartItemViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItemViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7519baa-cc88-4a48-8ca3-f3e88b6c1c4f"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2898),
                            Name = "Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("5e56bb24-6157-42bf-9e06-f6d05e371d62"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2899),
                            Name = "Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("88e8c6e2-85d3-4842-9a2b-6852991287f0"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2900),
                            Name = "Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("6a322810-999c-4649-9bbf-1e7970c67d6e"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2901),
                            Name = "Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("2fa7a546-25e6-45a4-89dd-4253d2a4373c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2901),
                            Name = "Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("6266b341-398f-40b8-8406-2297980018dd"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2903),
                            Name = "Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("edc49103-2048-404b-abec-18874007c13d"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2903),
                            Name = "Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("ad123586-6a58-4304-9efc-48f5e2fcf14c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2935),
                            Name = "Gác cần",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxOfDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOfTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutoLogout")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivityLogs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingForSupport")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9d04d1d-08a7-4c3f-922a-3d3164265058"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2856),
                            Description = "Nhà sản xuất cần câu nổi tiếng từ Nhật Bản",
                            Name = "Daiwa",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("25e541e1-7ecc-4b65-9ee6-abadb629322c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2867),
                            Description = "Thương hiệu đồ câu cá hàng đầu thế giới",
                            Name = "Shimano",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("d25e02f5-71d7-4bb7-934b-df2b6af96cd3"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2869),
                            Description = "Chuyên sản xuất mồi câu cá",
                            Name = "Rapala",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("28bdd7e5-0ffd-4743-883b-59a07ae08765"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2869),
                            Description = "Nhà sản xuất mồi và phụ kiện câu cá",
                            Name = "Berkley",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("5909c938-7f31-43e3-8e0e-1b0b952fd2bb"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2870),
                            Description = "Thương hiệu trục câu nổi tiếng",
                            Name = "Abu Garcia",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("74cdc3c6-e537-4d4e-9394-7ae427823b20"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2871),
                            Description = "Nhà sản xuất đồ câu chất lượng cao",
                            Name = "Okuma",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("07489e39-459e-4d3e-b99a-09c219342e43"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2872),
                            Description = "Chuyên về trục và cần câu biển",
                            Name = "Penn",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("7f9b4405-e4b7-4e84-b3db-7c7827a2922c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2873),
                            Description = "Nhà sản xuất dây câu chất lượng",
                            Name = "Sufix",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("a5ad5477-12f6-4721-b6f0-8de93703a66f"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2873),
                            Description = "Chuyên sản xuất lưỡi câu",
                            Name = "Gamakatsu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("4e7d355c-3fda-4485-8307-a93c1450ab36"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2874),
                            Description = "Thương hiệu lưỡi câu nổi tiếng",
                            Name = "Mustad",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04a6a42c-edc9-4a27-963d-dc996569683e"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("c7519baa-cc88-4a48-8ca3-f3e88b6c1c4f"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2960),
                            ManufacturerId = new Guid("e9d04d1d-08a7-4c3f-922a-3d3164265058"),
                            Name = "Sản phẩm 1 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("a2ab4014-0fd1-4d26-a29b-8c21116a904e"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("5e56bb24-6157-42bf-9e06-f6d05e371d62"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2983),
                            ManufacturerId = new Guid("25e541e1-7ecc-4b65-9ee6-abadb629322c"),
                            Name = "Sản phẩm 2 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("f8367804-90ee-4679-844c-66fec1c76ea4"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("88e8c6e2-85d3-4842-9a2b-6852991287f0"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2993),
                            ManufacturerId = new Guid("d25e02f5-71d7-4bb7-934b-df2b6af96cd3"),
                            Name = "Sản phẩm 3 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("e56af974-93b8-47da-969c-828872ab4b4a"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("6a322810-999c-4649-9bbf-1e7970c67d6e"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3001),
                            ManufacturerId = new Guid("28bdd7e5-0ffd-4743-883b-59a07ae08765"),
                            Name = "Sản phẩm 4 - Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("923f9fc0-a43c-4182-88fe-6eb58315db17"),
                            AttributeName = "Dung tích",
                            AttributeUnit = "lít",
                            CategoryId = new Guid("2fa7a546-25e6-45a4-89dd-4253d2a4373c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3009),
                            ManufacturerId = new Guid("5909c938-7f31-43e3-8e0e-1b0b952fd2bb"),
                            Name = "Sản phẩm 5 - Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("efdabc9c-e389-4c72-b170-8896d24229d3"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("6266b341-398f-40b8-8406-2297980018dd"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3016),
                            ManufacturerId = new Guid("74cdc3c6-e537-4d4e-9394-7ae427823b20"),
                            Name = "Sản phẩm 6 - Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("78a83551-1566-4eb7-9a38-dee2ec40c940"),
                            AttributeName = "Loại mồi",
                            AttributeUnit = "",
                            CategoryId = new Guid("edc49103-2048-404b-abec-18874007c13d"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3047),
                            ManufacturerId = new Guid("07489e39-459e-4d3e-b99a-09c219342e43"),
                            Name = "Sản phẩm 7 - Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("2543e6e4-8b1b-4aea-b8f1-53191531c5d9"),
                            AttributeName = "Chất liệu",
                            AttributeUnit = "",
                            CategoryId = new Guid("ad123586-6a58-4304-9efc-48f5e2fcf14c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3054),
                            ManufacturerId = new Guid("7f9b4405-e4b7-4e84-b3db-7c7827a2922c"),
                            Name = "Sản phẩm 8 - Gác cần",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("decf12e5-2c7b-4b03-a610-4c0e9fed6519"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("c7519baa-cc88-4a48-8ca3-f3e88b6c1c4f"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3062),
                            ManufacturerId = new Guid("a5ad5477-12f6-4721-b6f0-8de93703a66f"),
                            Name = "Sản phẩm 9 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("532deea6-e3ab-4d24-9cc7-78bd4ea078ec"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("5e56bb24-6157-42bf-9e06-f6d05e371d62"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3070),
                            ManufacturerId = new Guid("4e7d355c-3fda-4485-8307-a93c1450ab36"),
                            Name = "Sản phẩm 10 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("020acb93-0b77-4ecb-ae03-5045a4bd7c83"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("88e8c6e2-85d3-4842-9a2b-6852991287f0"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3080),
                            ManufacturerId = new Guid("e9d04d1d-08a7-4c3f-922a-3d3164265058"),
                            Name = "Sản phẩm 11 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("2612b89c-158f-4621-9521-55824929a16d"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("6a322810-999c-4649-9bbf-1e7970c67d6e"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3087),
                            ManufacturerId = new Guid("25e541e1-7ecc-4b65-9ee6-abadb629322c"),
                            Name = "Sản phẩm 12 - Phao",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("b5ed5903-c90d-407d-888a-b06a99c8d135"),
                            AttributeName = "Dung tích",
                            AttributeUnit = "lít",
                            CategoryId = new Guid("2fa7a546-25e6-45a4-89dd-4253d2a4373c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3095),
                            ManufacturerId = new Guid("d25e02f5-71d7-4bb7-934b-df2b6af96cd3"),
                            Name = "Sản phẩm 13 - Thùng câu",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("857b451f-e6aa-4a45-8656-b5b5c92f8512"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("6266b341-398f-40b8-8406-2297980018dd"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3138),
                            ManufacturerId = new Guid("28bdd7e5-0ffd-4743-883b-59a07ae08765"),
                            Name = "Sản phẩm 14 - Giọ",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("0fa22a96-bb76-4800-b514-5bc234bc6184"),
                            AttributeName = "Loại mồi",
                            AttributeUnit = "",
                            CategoryId = new Guid("edc49103-2048-404b-abec-18874007c13d"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3147),
                            ManufacturerId = new Guid("5909c938-7f31-43e3-8e0e-1b0b952fd2bb"),
                            Name = "Sản phẩm 15 - Mồi",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("71887ce0-3415-4fa8-95c9-4f0616261337"),
                            AttributeName = "Chất liệu",
                            AttributeUnit = "",
                            CategoryId = new Guid("ad123586-6a58-4304-9efc-48f5e2fcf14c"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3154),
                            ManufacturerId = new Guid("74cdc3c6-e537-4d4e-9394-7ae427823b20"),
                            Name = "Sản phẩm 16 - Gác cần",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("f94289af-84a9-4c29-bdbf-8840c2e08fee"),
                            AttributeName = "Chiều dài",
                            AttributeUnit = "m",
                            CategoryId = new Guid("c7519baa-cc88-4a48-8ca3-f3e88b6c1c4f"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3162),
                            ManufacturerId = new Guid("07489e39-459e-4d3e-b99a-09c219342e43"),
                            Name = "Sản phẩm 17 - Cần câu đài",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("b5d5d4e7-428d-4cba-a9b0-200aa3053ca0"),
                            AttributeName = "Tỷ lệ truyền",
                            AttributeUnit = "",
                            CategoryId = new Guid("5e56bb24-6157-42bf-9e06-f6d05e371d62"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3170),
                            ManufacturerId = new Guid("7f9b4405-e4b7-4e84-b3db-7c7827a2922c"),
                            Name = "Sản phẩm 18 - Trục",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("0aad8302-6e3e-4c40-9d8b-e0287cd91e6e"),
                            AttributeName = "Độ bền",
                            AttributeUnit = "lb",
                            CategoryId = new Guid("88e8c6e2-85d3-4842-9a2b-6852991287f0"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3177),
                            ManufacturerId = new Guid("a5ad5477-12f6-4721-b6f0-8de93703a66f"),
                            Name = "Sản phẩm 19 - Thẻo",
                            Status = "1"
                        },
                        new
                        {
                            Id = new Guid("a563ef5c-5a94-4d41-b67b-ff8fc156b405"),
                            AttributeName = "Kích thước",
                            AttributeUnit = "cm",
                            CategoryId = new Guid("6a322810-999c-4649-9bbf-1e7970c67d6e"),
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3183),
                            ManufacturerId = new Guid("4e7d355c-3fda-4485-8307-a93c1450ab36"),
                            Name = "Sản phẩm 20 - Phao",
                            Status = "1"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4f77883-15d9-49e5-8bc9-cbdf86b6aae9"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2967),
                            Description = "Biến thể 1 của Sản phẩm 1 - Cần câu đài",
                            Price = 150000m,
                            ProductId = new Guid("04a6a42c-edc9-4a27-963d-dc996569683e"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("7c837ebf-79fe-433e-b02e-dafa933d6ba1"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2973),
                            Description = "Biến thể 2 của Sản phẩm 1 - Cần câu đài",
                            Price = 200000m,
                            ProductId = new Guid("04a6a42c-edc9-4a27-963d-dc996569683e"),
                            Status = "1",
                            Stock = 15
                        },
                        new
                        {
                            Id = new Guid("f25df2ff-a684-4470-b3d4-35b47ad6d772"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2975),
                            Description = "Biến thể 3 của Sản phẩm 1 - Cần câu đài",
                            Price = 250000m,
                            ProductId = new Guid("04a6a42c-edc9-4a27-963d-dc996569683e"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("2be064b7-1e8b-4654-84c1-36dcb4651c7e"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2987),
                            Description = "Biến thể 1 của Sản phẩm 2 - Trục",
                            Price = 300000m,
                            ProductId = new Guid("a2ab4014-0fd1-4d26-a29b-8c21116a904e"),
                            Status = "1",
                            Stock = 25
                        },
                        new
                        {
                            Id = new Guid("2f670fb2-821a-4bd2-b65c-17f322e685bc"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2989),
                            Description = "Biến thể 2 của Sản phẩm 2 - Trục",
                            Price = 350000m,
                            ProductId = new Guid("a2ab4014-0fd1-4d26-a29b-8c21116a904e"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("9ae94a79-fd5a-4d70-a499-c465a80e8583"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2990),
                            Description = "Biến thể 3 của Sản phẩm 2 - Trục",
                            Price = 400000m,
                            ProductId = new Guid("a2ab4014-0fd1-4d26-a29b-8c21116a904e"),
                            Status = "1",
                            Stock = 15
                        },
                        new
                        {
                            Id = new Guid("0afdbd6b-cf54-4b1a-a6e1-5366ddeeebb7"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2994),
                            Description = "Biến thể 1 của Sản phẩm 3 - Thẻo",
                            Price = 50000m,
                            ProductId = new Guid("f8367804-90ee-4679-844c-66fec1c76ea4"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("b2bb3cb0-911c-4f0b-a40b-6e6ffcaa1dc7"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2996),
                            Description = "Biến thể 2 của Sản phẩm 3 - Thẻo",
                            Price = 60000m,
                            ProductId = new Guid("f8367804-90ee-4679-844c-66fec1c76ea4"),
                            Status = "1",
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("fff03146-eaec-49a0-a875-b20cee61b9a3"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(2997),
                            Description = "Biến thể 3 của Sản phẩm 3 - Thẻo",
                            Price = 70000m,
                            ProductId = new Guid("f8367804-90ee-4679-844c-66fec1c76ea4"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("f7ec26af-7fde-4aab-8ab3-90c6c579f268"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3004),
                            Description = "Biến thể 1 của Sản phẩm 4 - Phao",
                            Price = 20000m,
                            ProductId = new Guid("e56af974-93b8-47da-969c-828872ab4b4a"),
                            Status = "1",
                            Stock = 60
                        },
                        new
                        {
                            Id = new Guid("87f3fe5f-8c4d-479a-a7ed-12525f74afb9"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3005),
                            Description = "Biến thể 2 của Sản phẩm 4 - Phao",
                            Price = 25000m,
                            ProductId = new Guid("e56af974-93b8-47da-969c-828872ab4b4a"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("2e235f32-210d-4cd7-8257-1cfe95fde210"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3007),
                            Description = "Biến thể 3 của Sản phẩm 4 - Phao",
                            Price = 30000m,
                            ProductId = new Guid("e56af974-93b8-47da-969c-828872ab4b4a"),
                            Status = "1",
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("54398130-ecfe-4be3-87bb-c9c8d7973cef"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3011),
                            Description = "Biến thể 1 của Sản phẩm 5 - Thùng câu",
                            Price = 500000m,
                            ProductId = new Guid("923f9fc0-a43c-4182-88fe-6eb58315db17"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("e2f85b6b-9abd-4352-b3a6-8d2111208624"),
                            AttributeValue = "40",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3012),
                            Description = "Biến thể 2 của Sản phẩm 5 - Thùng câu",
                            Price = 600000m,
                            ProductId = new Guid("923f9fc0-a43c-4182-88fe-6eb58315db17"),
                            Status = "1",
                            Stock = 8
                        },
                        new
                        {
                            Id = new Guid("44672daa-5640-4af2-8283-8592088c1625"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3014),
                            Description = "Biến thể 3 của Sản phẩm 5 - Thùng câu",
                            Price = 700000m,
                            ProductId = new Guid("923f9fc0-a43c-4182-88fe-6eb58315db17"),
                            Status = "1",
                            Stock = 6
                        },
                        new
                        {
                            Id = new Guid("07bdb82f-f717-4590-98f4-5abf28cd0153"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3019),
                            Description = "Biến thể 1 của Sản phẩm 6 - Giọ",
                            Price = 100000m,
                            ProductId = new Guid("efdabc9c-e389-4c72-b170-8896d24229d3"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("0e9d6411-06ad-4146-a855-c9458c5f37db"),
                            AttributeValue = "60",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3021),
                            Description = "Biến thể 2 của Sản phẩm 6 - Giọ",
                            Price = 120000m,
                            ProductId = new Guid("efdabc9c-e389-4c72-b170-8896d24229d3"),
                            Status = "1",
                            Stock = 25
                        },
                        new
                        {
                            Id = new Guid("5134019d-70af-445a-96d2-630db7661687"),
                            AttributeValue = "70",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3022),
                            Description = "Biến thể 3 của Sản phẩm 6 - Giọ",
                            Price = 140000m,
                            ProductId = new Guid("efdabc9c-e389-4c72-b170-8896d24229d3"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("afa73375-8ce3-4161-aea8-919adbcec626"),
                            AttributeValue = "Mồi giả",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3049),
                            Description = "Biến thể 1 của Sản phẩm 7 - Mồi",
                            Price = 30000m,
                            ProductId = new Guid("78a83551-1566-4eb7-9a38-dee2ec40c940"),
                            Status = "1",
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("5056d461-c867-431a-ac8d-0dbbba674767"),
                            AttributeValue = "Mồi tự nhiên",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3050),
                            Description = "Biến thể 2 của Sản phẩm 7 - Mồi",
                            Price = 35000m,
                            ProductId = new Guid("78a83551-1566-4eb7-9a38-dee2ec40c940"),
                            Status = "1",
                            Stock = 90
                        },
                        new
                        {
                            Id = new Guid("c00392d5-f610-48d5-b1be-2668cec73ad7"),
                            AttributeValue = "Mồi tổng hợp",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3052),
                            Description = "Biến thể 3 của Sản phẩm 7 - Mồi",
                            Price = 40000m,
                            ProductId = new Guid("78a83551-1566-4eb7-9a38-dee2ec40c940"),
                            Status = "1",
                            Stock = 80
                        },
                        new
                        {
                            Id = new Guid("ed98091b-1d1a-4356-99bd-41f142cefaa8"),
                            AttributeValue = "Nhôm",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3056),
                            Description = "Biến thể 1 của Sản phẩm 8 - Gác cần",
                            Price = 80000m,
                            ProductId = new Guid("2543e6e4-8b1b-4aea-b8f1-53191531c5d9"),
                            Status = "1",
                            Stock = 35
                        },
                        new
                        {
                            Id = new Guid("6eadd83f-41f9-41e3-bd8f-9f0fb61332e9"),
                            AttributeValue = "Thép",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3059),
                            Description = "Biến thể 2 của Sản phẩm 8 - Gác cần",
                            Price = 90000m,
                            ProductId = new Guid("2543e6e4-8b1b-4aea-b8f1-53191531c5d9"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("e99136f7-b5c6-415a-bf3c-7b6c6c603cc5"),
                            AttributeValue = "Carbon",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3060),
                            Description = "Biến thể 3 của Sản phẩm 8 - Gác cần",
                            Price = 100000m,
                            ProductId = new Guid("2543e6e4-8b1b-4aea-b8f1-53191531c5d9"),
                            Status = "1",
                            Stock = 25
                        },
                        new
                        {
                            Id = new Guid("27a4aed8-af16-474e-a7b1-fe113c84dde6"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3065),
                            Description = "Biến thể 1 của Sản phẩm 9 - Cần câu đài",
                            Price = 160000m,
                            ProductId = new Guid("decf12e5-2c7b-4b03-a610-4c0e9fed6519"),
                            Status = "1",
                            Stock = 18
                        },
                        new
                        {
                            Id = new Guid("71c1732d-7656-40c6-a757-8cc53f56dab7"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3066),
                            Description = "Biến thể 2 của Sản phẩm 9 - Cần câu đài",
                            Price = 210000m,
                            ProductId = new Guid("decf12e5-2c7b-4b03-a610-4c0e9fed6519"),
                            Status = "1",
                            Stock = 14
                        },
                        new
                        {
                            Id = new Guid("dd77ae5d-e861-4dfc-b965-c415fc92ec16"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3068),
                            Description = "Biến thể 3 của Sản phẩm 9 - Cần câu đài",
                            Price = 260000m,
                            ProductId = new Guid("decf12e5-2c7b-4b03-a610-4c0e9fed6519"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("9fb61427-e8f0-415a-b60b-9ab23d2246b1"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3073),
                            Description = "Biến thể 1 của Sản phẩm 10 - Trục",
                            Price = 310000m,
                            ProductId = new Guid("532deea6-e3ab-4d24-9cc7-78bd4ea078ec"),
                            Status = "1",
                            Stock = 22
                        },
                        new
                        {
                            Id = new Guid("14770db9-8eac-4bd7-967c-b4ac934becca"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3075),
                            Description = "Biến thể 2 của Sản phẩm 10 - Trục",
                            Price = 360000m,
                            ProductId = new Guid("532deea6-e3ab-4d24-9cc7-78bd4ea078ec"),
                            Status = "1",
                            Stock = 18
                        },
                        new
                        {
                            Id = new Guid("fdb1b6e2-9df4-4265-928d-ef9166ba12aa"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3079),
                            Description = "Biến thể 3 của Sản phẩm 10 - Trục",
                            Price = 410000m,
                            ProductId = new Guid("532deea6-e3ab-4d24-9cc7-78bd4ea078ec"),
                            Status = "1",
                            Stock = 14
                        },
                        new
                        {
                            Id = new Guid("00368896-f333-4435-b0b7-1684bb3aa360"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3082),
                            Description = "Biến thể 1 của Sản phẩm 11 - Thẻo",
                            Price = 55000m,
                            ProductId = new Guid("020acb93-0b77-4ecb-ae03-5045a4bd7c83"),
                            Status = "1",
                            Stock = 55
                        },
                        new
                        {
                            Id = new Guid("630f4ad8-9e4a-41e2-abe3-3378ddadc832"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3083),
                            Description = "Biến thể 2 của Sản phẩm 11 - Thẻo",
                            Price = 65000m,
                            ProductId = new Guid("020acb93-0b77-4ecb-ae03-5045a4bd7c83"),
                            Status = "1",
                            Stock = 45
                        },
                        new
                        {
                            Id = new Guid("f5d848bd-ff59-49f9-a577-0425e54cb8d9"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3084),
                            Description = "Biến thể 3 của Sản phẩm 11 - Thẻo",
                            Price = 75000m,
                            ProductId = new Guid("020acb93-0b77-4ecb-ae03-5045a4bd7c83"),
                            Status = "1",
                            Stock = 35
                        },
                        new
                        {
                            Id = new Guid("0d4bef91-d493-4dee-93e4-6568574927cb"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3090),
                            Description = "Biến thể 1 của Sản phẩm 12 - Phao",
                            Price = 22000m,
                            ProductId = new Guid("2612b89c-158f-4621-9521-55824929a16d"),
                            Status = "1",
                            Stock = 65
                        },
                        new
                        {
                            Id = new Guid("b68056dc-4ae9-4973-943f-93367ca13245"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3092),
                            Description = "Biến thể 2 của Sản phẩm 12 - Phao",
                            Price = 27000m,
                            ProductId = new Guid("2612b89c-158f-4621-9521-55824929a16d"),
                            Status = "1",
                            Stock = 55
                        },
                        new
                        {
                            Id = new Guid("bfb6abfd-6af6-4fd1-84ac-db12481d6e62"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3093),
                            Description = "Biến thể 3 của Sản phẩm 12 - Phao",
                            Price = 32000m,
                            ProductId = new Guid("2612b89c-158f-4621-9521-55824929a16d"),
                            Status = "1",
                            Stock = 45
                        },
                        new
                        {
                            Id = new Guid("566cb44b-f991-4bca-9c08-cb131c55c1e6"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3133),
                            Description = "Biến thể 1 của Sản phẩm 13 - Thùng câu",
                            Price = 510000m,
                            ProductId = new Guid("b5ed5903-c90d-407d-888a-b06a99c8d135"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("293b741f-be26-476f-98a0-668d88345fe5"),
                            AttributeValue = "40",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3134),
                            Description = "Biến thể 2 của Sản phẩm 13 - Thùng câu",
                            Price = 610000m,
                            ProductId = new Guid("b5ed5903-c90d-407d-888a-b06a99c8d135"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("8a8a275b-daa2-40bf-b178-5ff901471d67"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3136),
                            Description = "Biến thể 3 của Sản phẩm 13 - Thùng câu",
                            Price = 710000m,
                            ProductId = new Guid("b5ed5903-c90d-407d-888a-b06a99c8d135"),
                            Status = "1",
                            Stock = 8
                        },
                        new
                        {
                            Id = new Guid("bd7f821a-1b67-4207-8163-397fd4d12285"),
                            AttributeValue = "50",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3142),
                            Description = "Biến thể 1 của Sản phẩm 14 - Giọ",
                            Price = 110000m,
                            ProductId = new Guid("857b451f-e6aa-4a45-8656-b5b5c92f8512"),
                            Status = "1",
                            Stock = 28
                        },
                        new
                        {
                            Id = new Guid("79d4a0cf-ccbc-4392-a272-4f0855f979d9"),
                            AttributeValue = "60",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3143),
                            Description = "Biến thể 2 của Sản phẩm 14 - Giọ",
                            Price = 130000m,
                            ProductId = new Guid("857b451f-e6aa-4a45-8656-b5b5c92f8512"),
                            Status = "1",
                            Stock = 22
                        },
                        new
                        {
                            Id = new Guid("c7020673-a6a1-4658-9988-7d29c849391a"),
                            AttributeValue = "70",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3144),
                            Description = "Biến thể 3 của Sản phẩm 14 - Giọ",
                            Price = 150000m,
                            ProductId = new Guid("857b451f-e6aa-4a45-8656-b5b5c92f8512"),
                            Status = "1",
                            Stock = 18
                        },
                        new
                        {
                            Id = new Guid("43326e00-d0fa-417b-ad8b-1c8c3cd4dc8f"),
                            AttributeValue = "Mồi giả",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3149),
                            Description = "Biến thể 1 của Sản phẩm 15 - Mồi",
                            Price = 32000m,
                            ProductId = new Guid("0fa22a96-bb76-4800-b514-5bc234bc6184"),
                            Status = "1",
                            Stock = 95
                        },
                        new
                        {
                            Id = new Guid("92f120a9-3d8e-4c9b-b837-da22e50e7e68"),
                            AttributeValue = "Mồi tự nhiên",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3150),
                            Description = "Biến thể 2 của Sản phẩm 15 - Mồi",
                            Price = 37000m,
                            ProductId = new Guid("0fa22a96-bb76-4800-b514-5bc234bc6184"),
                            Status = "1",
                            Stock = 85
                        },
                        new
                        {
                            Id = new Guid("ee13751b-e425-41a8-83da-24a15eac15f9"),
                            AttributeValue = "Mồi tổng hợp",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3151),
                            Description = "Biến thể 3 của Sản phẩm 15 - Mồi",
                            Price = 42000m,
                            ProductId = new Guid("0fa22a96-bb76-4800-b514-5bc234bc6184"),
                            Status = "1",
                            Stock = 75
                        },
                        new
                        {
                            Id = new Guid("3e340e7d-9344-43a2-8522-d4427c84ac3d"),
                            AttributeValue = "Nhôm",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3156),
                            Description = "Biến thể 1 của Sản phẩm 16 - Gác cần",
                            Price = 85000m,
                            ProductId = new Guid("71887ce0-3415-4fa8-95c9-4f0616261337"),
                            Status = "1",
                            Stock = 32
                        },
                        new
                        {
                            Id = new Guid("35478750-e8e0-4e64-bb8e-6eee6cba9447"),
                            AttributeValue = "Thép",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3159),
                            Description = "Biến thể 2 của Sản phẩm 16 - Gác cần",
                            Price = 95000m,
                            ProductId = new Guid("71887ce0-3415-4fa8-95c9-4f0616261337"),
                            Status = "1",
                            Stock = 28
                        },
                        new
                        {
                            Id = new Guid("09fca895-8b5b-44e0-8d76-61a9681b3603"),
                            AttributeValue = "Carbon",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3160),
                            Description = "Biến thể 3 của Sản phẩm 16 - Gác cần",
                            Price = 105000m,
                            ProductId = new Guid("71887ce0-3415-4fa8-95c9-4f0616261337"),
                            Status = "1",
                            Stock = 22
                        },
                        new
                        {
                            Id = new Guid("e92ab8d4-f8ae-4e7b-9473-013d95317cd1"),
                            AttributeValue = "3.6",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3166),
                            Description = "Biến thể 1 của Sản phẩm 17 - Cần câu đài",
                            Price = 170000m,
                            ProductId = new Guid("f94289af-84a9-4c29-bdbf-8840c2e08fee"),
                            Status = "1",
                            Stock = 16
                        },
                        new
                        {
                            Id = new Guid("45d1a1cb-6240-43e5-92b5-126722ae1eff"),
                            AttributeValue = "4.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3167),
                            Description = "Biến thể 2 của Sản phẩm 17 - Cần câu đài",
                            Price = 220000m,
                            ProductId = new Guid("f94289af-84a9-4c29-bdbf-8840c2e08fee"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("e9767470-29e4-4b89-bfb5-d58b93d50be3"),
                            AttributeValue = "5.4",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3168),
                            Description = "Biến thể 3 của Sản phẩm 17 - Cần câu đài",
                            Price = 270000m,
                            ProductId = new Guid("f94289af-84a9-4c29-bdbf-8840c2e08fee"),
                            Status = "1",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("e384247b-2f03-4ba2-bab4-342f6c502036"),
                            AttributeValue = "5.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3173),
                            Description = "Biến thể 1 của Sản phẩm 18 - Trục",
                            Price = 320000m,
                            ProductId = new Guid("b5d5d4e7-428d-4cba-a9b0-200aa3053ca0"),
                            Status = "1",
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("7307917f-edad-4a96-9990-010d2353d68a"),
                            AttributeValue = "6.2:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3174),
                            Description = "Biến thể 2 của Sản phẩm 18 - Trục",
                            Price = 370000m,
                            ProductId = new Guid("b5d5d4e7-428d-4cba-a9b0-200aa3053ca0"),
                            Status = "1",
                            Stock = 16
                        },
                        new
                        {
                            Id = new Guid("70c1d226-7420-4230-ac63-734aec3142c7"),
                            AttributeValue = "7.0:1",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3176),
                            Description = "Biến thể 3 của Sản phẩm 18 - Trục",
                            Price = 420000m,
                            ProductId = new Guid("b5d5d4e7-428d-4cba-a9b0-200aa3053ca0"),
                            Status = "1",
                            Stock = 12
                        },
                        new
                        {
                            Id = new Guid("90e1980f-5755-43d6-a2b3-b5cba5a46d80"),
                            AttributeValue = "10",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3179),
                            Description = "Biến thể 1 của Sản phẩm 19 - Thẻo",
                            Price = 60000m,
                            ProductId = new Guid("0aad8302-6e3e-4c40-9d8b-e0287cd91e6e"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("8eda6ea1-8916-4e5d-922f-907868ac0421"),
                            AttributeValue = "20",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3180),
                            Description = "Biến thể 2 của Sản phẩm 19 - Thẻo",
                            Price = 70000m,
                            ProductId = new Guid("0aad8302-6e3e-4c40-9d8b-e0287cd91e6e"),
                            Status = "1",
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("6b579886-c391-4475-aae2-0cc58529032c"),
                            AttributeValue = "30",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3181),
                            Description = "Biến thể 3 của Sản phẩm 19 - Thẻo",
                            Price = 80000m,
                            ProductId = new Guid("0aad8302-6e3e-4c40-9d8b-e0287cd91e6e"),
                            Status = "1",
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("e7e7a759-9735-4bed-87e1-bf92ce88e53b"),
                            AttributeValue = "2.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3211),
                            Description = "Biến thể 1 của Sản phẩm 20 - Phao",
                            Price = 23000m,
                            ProductId = new Guid("a563ef5c-5a94-4d41-b67b-ff8fc156b405"),
                            Status = "1",
                            Stock = 60
                        },
                        new
                        {
                            Id = new Guid("a7643b7b-8aad-4bfe-9ef3-a3d976764de2"),
                            AttributeValue = "3.0",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3212),
                            Description = "Biến thể 2 của Sản phẩm 20 - Phao",
                            Price = 28000m,
                            ProductId = new Guid("a563ef5c-5a94-4d41-b67b-ff8fc156b405"),
                            Status = "1",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("a2fa2eb9-750f-4d5b-8beb-59c2546352de"),
                            AttributeValue = "3.5",
                            CreatedTime = new DateTime(2025, 5, 24, 22, 58, 54, 172, DateTimeKind.Local).AddTicks(3213),
                            Description = "Biến thể 3 của Sản phẩm 20 - Phao",
                            Price = 33000m,
                            ProductId = new Guid("a563ef5c-5a94-4d41-b67b-ff8fc156b405"),
                            Status = "1",
                            Stock = 40
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productViewModels");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c54b913e-9c30-4388-8de8-ea5a71aa7caf"),
                            CreatedTime = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fishingbee2024@gmail.com",
                            Password = "AQAAAAEAACcQAAAAEMExeYHLQCcVXXEUhfBnQ9RkpwFn8kI3qhqko/wSy+Ch3Ok0Geuvi7RgTa6kybcmsg==",
                            PhoneNumber = "0123456789",
                            Status = "1",
                            UserType = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Data_FishingBee.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("Bills")
                        .HasForeignKey("AdminId");

                    b.HasOne("Data_FishingBee.Models.Coupon", null)
                        .WithMany("Bills")
                        .HasForeignKey("CouponId");

                    b.HasOne("Data_FishingBee.Models.Customer", null)
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Employee", null)
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Data_FishingBee.Models.BillDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart_PD", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Cart", "Cart")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithMany("Cart_PDs")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Data_FishingBee.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerActivityLog", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerActivityLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.CustomerSupport", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Admin", null)
                        .WithMany("CustomerSupports")
                        .HasForeignKey("AdminId1");

                    b.HasOne("Data_FishingBee.Models.Customer", "Customer")
                        .WithMany("CustomerSupports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.HasOne("Data_FishingBee.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Data_FishingBee.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ImportHistory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.HasOne("Data_FishingBee.Models.ProductDetail", "ProductDetail")
                        .WithOne("Inventory")
                        .HasForeignKey("Data_FishingBee.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Inventory", null)
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryId");

                    b.HasOne("Data_FishingBee.Models.Supplier", null)
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Notifications", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Employee", "Employee")
                        .WithMany("Notifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_FishingBee.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductImage", b =>
                {
                    b.HasOne("Data_FishingBee.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Admin", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Cart", b =>
                {
                    b.Navigation("Cart_PDs");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Coupon", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");

                    b.Navigation("CustomerActivityLogs");

                    b.Navigation("CustomerSupports");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Inventory", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_FishingBee.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Data_FishingBee.Models.ProductDetail", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Cart_PDs");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("Data_FishingBee.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Data_FishingBee.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
